{
  "$schema": "http://json-schema.org/schema#",
  "definitions": {
    "Accessibility": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "private"
          ]
        },
        {
          "type": "string",
          "enum": [
            "protected"
          ]
        },
        {
          "type": "string",
          "enum": [
            "public"
          ]
        }
      ]
    },
    "ArrayExpression": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ArrayExpression"
          ]
        },
        "elements": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/Expression"
              },
              {
                "$ref": "#/definitions/SpreadElement"
              }
            ]
          }
        }
      },
      "required": [
        "type",
        "elements"
      ]
    },
    "ArrayPattern": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ArrayPattern"
          ]
        },
        "elements": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/DestructuringPattern"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "typeAnnotation": {
          "$ref": "#/definitions/TSTypeAnnotation"
        },
        "optional": {
          "type": "boolean"
        },
        "decorators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Decorator"
          }
        }
      },
      "required": [
        "type",
        "elements"
      ]
    },
    "ArrowFunctionExpression": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ArrowFunctionExpression"
          ]
        },
        "generator": {
          "type": "boolean"
        },
        "id": {
          "type": "null"
        },
        "params": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Parameter"
          }
        },
        "body": {
          "oneOf": [
            {
              "$ref": "#/definitions/BlockStatement"
            },
            {
              "$ref": "#/definitions/Expression"
            }
          ]
        },
        "async": {
          "type": "boolean"
        },
        "expression": {
          "type": "boolean"
        },
        "returnType": {
          "$ref": "#/definitions/TSTypeAnnotation"
        },
        "typeParameters": {
          "$ref": "#/definitions/TSTypeParameterDeclaration"
        }
      },
      "required": [
        "type",
        "generator",
        "id",
        "params",
        "body",
        "async",
        "expression"
      ]
    },
    "AssignmentExpression": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AssignmentExpression"
          ]
        },
        "operator": {
          "type": "string",
          "enum": [
            "=",
            "+=",
            "-=",
            "*=",
            "**=",
            "/=",
            "%=",
            "<<=",
            ">>=",
            ">>>=",
            "&=",
            "|=",
            "||=",
            "&&=",
            "??=",
            "^="
          ]
        },
        "left": {
          "$ref": "#/definitions/Expression"
        },
        "right": {
          "$ref": "#/definitions/Expression"
        }
      },
      "required": [
        "type",
        "operator",
        "left",
        "right"
      ]
    },
    "AssignmentOperatorToText": {
      "type": "object",
      "properties": {
        "EqualsToken": {
          "type": "string",
          "enum": [
            "="
          ]
        },
        "PlusEqualsToken": {
          "type": "string",
          "enum": [
            "+="
          ]
        },
        "MinusEqualsToken": {
          "type": "string",
          "enum": [
            "-="
          ]
        },
        "AsteriskEqualsToken": {
          "type": "string",
          "enum": [
            "*="
          ]
        },
        "AsteriskAsteriskEqualsToken": {
          "type": "string",
          "enum": [
            "**="
          ]
        },
        "SlashEqualsToken": {
          "type": "string",
          "enum": [
            "/="
          ]
        },
        "PercentEqualsToken": {
          "type": "string",
          "enum": [
            "%="
          ]
        },
        "LessThanLessThanEqualsToken": {
          "type": "string",
          "enum": [
            "<<="
          ]
        },
        "GreaterThanGreaterThanEqualsToken": {
          "type": "string",
          "enum": [
            ">>="
          ]
        },
        "GreaterThanGreaterThanGreaterThanEqualsToken": {
          "type": "string",
          "enum": [
            ">>>="
          ]
        },
        "AmpersandEqualsToken": {
          "type": "string",
          "enum": [
            "&="
          ]
        },
        "BarEqualsToken": {
          "type": "string",
          "enum": [
            "|="
          ]
        },
        "BarBarEqualsToken": {
          "type": "string",
          "enum": [
            "||="
          ]
        },
        "AmpersandAmpersandEqualsToken": {
          "type": "string",
          "enum": [
            "&&="
          ]
        },
        "QuestionQuestionEqualsToken": {
          "type": "string",
          "enum": [
            "??="
          ]
        },
        "CaretEqualsToken": {
          "type": "string",
          "enum": [
            "^="
          ]
        }
      },
      "required": [
        "EqualsToken",
        "PlusEqualsToken",
        "MinusEqualsToken",
        "AsteriskEqualsToken",
        "AsteriskAsteriskEqualsToken",
        "SlashEqualsToken",
        "PercentEqualsToken",
        "LessThanLessThanEqualsToken",
        "GreaterThanGreaterThanEqualsToken",
        "GreaterThanGreaterThanGreaterThanEqualsToken",
        "AmpersandEqualsToken",
        "BarEqualsToken",
        "BarBarEqualsToken",
        "AmpersandAmpersandEqualsToken",
        "QuestionQuestionEqualsToken",
        "CaretEqualsToken"
      ]
    },
    "AssignmentPattern": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AssignmentPattern"
          ]
        },
        "left": {
          "$ref": "#/definitions/BindingName"
        },
        "right": {
          "$ref": "#/definitions/Expression"
        },
        "typeAnnotation": {
          "$ref": "#/definitions/TSTypeAnnotation"
        },
        "optional": {
          "type": "boolean"
        },
        "decorators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Decorator"
          }
        }
      },
      "required": [
        "type",
        "left",
        "right"
      ]
    },
    "AST_NODE_TYPES": {
      "type": "string",
      "enum": [
        "ArrayExpression",
        "ArrayPattern",
        "ArrowFunctionExpression",
        "AssignmentExpression",
        "AssignmentPattern",
        "AwaitExpression",
        "BinaryExpression",
        "BlockStatement",
        "BreakStatement",
        "CallExpression",
        "CatchClause",
        "ChainExpression",
        "ClassBody",
        "ClassDeclaration",
        "ClassExpression",
        "ConditionalExpression",
        "ContinueStatement",
        "DebuggerStatement",
        "Decorator",
        "DoWhileStatement",
        "EmptyStatement",
        "ExportAllDeclaration",
        "ExportDefaultDeclaration",
        "ExportNamedDeclaration",
        "ExportSpecifier",
        "ExpressionStatement",
        "ForInStatement",
        "ForOfStatement",
        "ForStatement",
        "FunctionDeclaration",
        "FunctionExpression",
        "Identifier",
        "IfStatement",
        "ImportAttribute",
        "ImportDeclaration",
        "ImportDefaultSpecifier",
        "ImportExpression",
        "ImportNamespaceSpecifier",
        "ImportSpecifier",
        "JSXAttribute",
        "JSXClosingElement",
        "JSXClosingFragment",
        "JSXElement",
        "JSXEmptyExpression",
        "JSXExpressionContainer",
        "JSXFragment",
        "JSXIdentifier",
        "JSXMemberExpression",
        "JSXNamespacedName",
        "JSXOpeningElement",
        "JSXOpeningFragment",
        "JSXSpreadAttribute",
        "JSXSpreadChild",
        "JSXText",
        "LabeledStatement",
        "Literal",
        "LogicalExpression",
        "MemberExpression",
        "MetaProperty",
        "MethodDefinition",
        "NewExpression",
        "ObjectExpression",
        "ObjectPattern",
        "PrivateIdentifier",
        "Program",
        "Property",
        "PropertyDefinition",
        "RestElement",
        "ReturnStatement",
        "SequenceExpression",
        "SpreadElement",
        "StaticBlock",
        "Super",
        "SwitchCase",
        "SwitchStatement",
        "TaggedTemplateExpression",
        "TemplateElement",
        "TemplateLiteral",
        "ThisExpression",
        "ThrowStatement",
        "TryStatement",
        "UnaryExpression",
        "UpdateExpression",
        "VariableDeclaration",
        "VariableDeclarator",
        "WhileStatement",
        "WithStatement",
        "YieldExpression",
        "TSAbstractKeyword",
        "TSAbstractMethodDefinition",
        "TSAbstractPropertyDefinition",
        "TSAnyKeyword",
        "TSArrayType",
        "TSAsExpression",
        "TSAsyncKeyword",
        "TSBigIntKeyword",
        "TSBooleanKeyword",
        "TSCallSignatureDeclaration",
        "TSClassImplements",
        "TSConditionalType",
        "TSConstructorType",
        "TSConstructSignatureDeclaration",
        "TSDeclareFunction",
        "TSDeclareKeyword",
        "TSEmptyBodyFunctionExpression",
        "TSEnumDeclaration",
        "TSEnumMember",
        "TSExportAssignment",
        "TSExportKeyword",
        "TSExternalModuleReference",
        "TSFunctionType",
        "TSInstantiationExpression",
        "TSImportEqualsDeclaration",
        "TSImportType",
        "TSIndexedAccessType",
        "TSIndexSignature",
        "TSInferType",
        "TSInterfaceBody",
        "TSInterfaceDeclaration",
        "TSInterfaceHeritage",
        "TSIntersectionType",
        "TSIntrinsicKeyword",
        "TSLiteralType",
        "TSMappedType",
        "TSMethodSignature",
        "TSModuleBlock",
        "TSModuleDeclaration",
        "TSNamedTupleMember",
        "TSNamespaceExportDeclaration",
        "TSNeverKeyword",
        "TSNonNullExpression",
        "TSNullKeyword",
        "TSNumberKeyword",
        "TSObjectKeyword",
        "TSOptionalType",
        "TSParameterProperty",
        "TSPrivateKeyword",
        "TSPropertySignature",
        "TSProtectedKeyword",
        "TSPublicKeyword",
        "TSQualifiedName",
        "TSReadonlyKeyword",
        "TSRestType",
        "TSStaticKeyword",
        "TSStringKeyword",
        "TSSymbolKeyword",
        "TSTemplateLiteralType",
        "TSThisType",
        "TSTupleType",
        "TSTypeAliasDeclaration",
        "TSTypeAnnotation",
        "TSTypeAssertion",
        "TSTypeLiteral",
        "TSTypeOperator",
        "TSTypeParameter",
        "TSTypeParameterDeclaration",
        "TSTypeParameterInstantiation",
        "TSTypePredicate",
        "TSTypeQuery",
        "TSTypeReference",
        "TSUndefinedKeyword",
        "TSUnionType",
        "TSUnknownKeyword",
        "TSVoidKeyword"
      ]
    },
    "AST_TOKEN_TYPES": {
      "type": "string",
      "enum": [
        "Boolean",
        "Identifier",
        "JSXIdentifier",
        "JSXText",
        "Keyword",
        "Null",
        "Numeric",
        "Punctuator",
        "RegularExpression",
        "String",
        "Template",
        "Block",
        "Line"
      ]
    },
    "AwaitExpression": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AwaitExpression"
          ]
        },
        "argument": {
          "$ref": "#/definitions/Expression"
        }
      },
      "required": [
        "type",
        "argument"
      ]
    },
    "BaseNode": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/AST_NODE_TYPES"
        }
      },
      "required": [
        "type"
      ]
    },
    "BaseToken": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/AST_TOKEN_TYPES"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "value"
      ]
    },
    "BinaryExpression": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "BinaryExpression"
          ]
        },
        "operator": {
          "type": "string"
        },
        "left": {
          "oneOf": [
            {
              "$ref": "#/definitions/Expression"
            },
            {
              "$ref": "#/definitions/PrivateIdentifier"
            }
          ]
        },
        "right": {
          "$ref": "#/definitions/Expression"
        }
      },
      "required": [
        "type",
        "operator",
        "left",
        "right"
      ]
    },
    "BindingName": {
      "oneOf": [
        {
          "$ref": "#/definitions/BindingPattern"
        },
        {
          "$ref": "#/definitions/Identifier"
        }
      ]
    },
    "BindingPattern": {
      "oneOf": [
        {
          "$ref": "#/definitions/ArrayPattern"
        },
        {
          "$ref": "#/definitions/ObjectPattern"
        }
      ]
    },
    "BlockComment": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Block"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "BlockStatement": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "BlockStatement"
          ]
        },
        "body": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Statement"
          }
        }
      },
      "required": [
        "type",
        "body"
      ]
    },
    "BooleanLiteral": {
      "allOf": [
        {
          "$ref": "#/definitions/LiteralBase"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "type": "boolean"
            },
            "raw": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "false"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "true"
                  ]
                }
              ]
            }
          },
          "required": [
            "value",
            "raw"
          ]
        }
      ]
    },
    "BooleanToken": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Boolean"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "BreakStatement": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "BreakStatement"
          ]
        },
        "label": {
          "oneOf": [
            {
              "$ref": "#/definitions/Identifier"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "type",
        "label"
      ]
    },
    "CallExpression": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "CallExpression"
          ]
        },
        "callee": {
          "$ref": "#/definitions/LeftHandSideExpression"
        },
        "arguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CallExpressionArgument"
          }
        },
        "typeParameters": {
          "$ref": "#/definitions/TSTypeParameterInstantiation"
        },
        "optional": {
          "type": "boolean"
        }
      },
      "required": [
        "type",
        "callee",
        "arguments",
        "optional"
      ]
    },
    "CallExpressionArgument": {
      "oneOf": [
        {
          "$ref": "#/definitions/Expression"
        },
        {
          "$ref": "#/definitions/SpreadElement"
        }
      ]
    },
    "CatchClause": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "CatchClause"
          ]
        },
        "param": {
          "oneOf": [
            {
              "$ref": "#/definitions/BindingName"
            },
            {
              "type": "null"
            }
          ]
        },
        "body": {
          "$ref": "#/definitions/BlockStatement"
        }
      },
      "required": [
        "type",
        "param",
        "body"
      ]
    },
    "ChainElement": {
      "oneOf": [
        {
          "$ref": "#/definitions/CallExpression"
        },
        {
          "$ref": "#/definitions/MemberExpression"
        },
        {
          "$ref": "#/definitions/TSNonNullExpression"
        }
      ]
    },
    "ChainExpression": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ChainExpression"
          ]
        },
        "expression": {
          "$ref": "#/definitions/ChainElement"
        }
      },
      "required": [
        "type",
        "expression"
      ]
    },
    "ClassBase": {
      "type": "object",
      "properties": {
        "abstract": {
          "type": "boolean"
        },
        "body": {
          "$ref": "#/definitions/ClassBody"
        },
        "declare": {
          "type": "boolean"
        },
        "decorators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Decorator"
          }
        },
        "id": {
          "oneOf": [
            {
              "$ref": "#/definitions/Identifier"
            },
            {
              "type": "null"
            }
          ]
        },
        "implements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TSClassImplements"
          }
        },
        "superClass": {
          "oneOf": [
            {
              "$ref": "#/definitions/LeftHandSideExpression"
            },
            {
              "type": "null"
            }
          ]
        },
        "superTypeParameters": {
          "$ref": "#/definitions/TSTypeParameterInstantiation"
        },
        "typeParameters": {
          "$ref": "#/definitions/TSTypeParameterDeclaration"
        }
      },
      "required": [
        "body",
        "id",
        "superClass"
      ]
    },
    "ClassBody": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ClassBody"
          ]
        },
        "body": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClassElement"
          }
        }
      },
      "required": [
        "type",
        "body"
      ]
    },
    "ClassDeclarationBase": {
      "allOf": [
        {
          "$ref": "#/definitions/ClassBase"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "ClassDeclaration"
              ]
            }
          },
          "required": [
            "type"
          ]
        }
      ]
    },
    "ClassDeclarationWithName": {
      "allOf": [
        {
          "$ref": "#/definitions/ClassDeclarationBase"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "$ref": "#/definitions/Identifier"
            }
          },
          "required": [
            "id"
          ]
        }
      ]
    },
    "ClassDeclarationWithOptionalName": {
      "allOf": [
        {
          "$ref": "#/definitions/ClassDeclarationBase"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "oneOf": [
                {
                  "$ref": "#/definitions/Identifier"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "required": [
            "id"
          ]
        }
      ]
    },
    "ClassElement": {
      "oneOf": [
        {
          "$ref": "#/definitions/MethodDefinition"
        },
        {
          "$ref": "#/definitions/PropertyDefinition"
        },
        {
          "$ref": "#/definitions/StaticBlock"
        },
        {
          "$ref": "#/definitions/TSAbstractMethodDefinition"
        },
        {
          "$ref": "#/definitions/TSAbstractPropertyDefinition"
        },
        {
          "$ref": "#/definitions/TSIndexSignature"
        }
      ]
    },
    "ClassExpression": {
      "allOf": [
        {
          "$ref": "#/definitions/ClassBase"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "ClassExpression"
              ]
            },
            "abstract": {
              "type": "null"
            },
            "declare": {
              "type": "null"
            },
            "decorators": {
              "type": "null"
            }
          },
          "required": [
            "type"
          ]
        }
      ]
    },
    "ClassMethodDefinitionNonComputedNameBase": {
      "allOf": [
        {
          "$ref": "#/definitions/MethodDefinitionBase"
        },
        {
          "type": "object",
          "properties": {
            "key": {
              "$ref": "#/definitions/ClassPropertyNameNonComputed"
            },
            "computed": {
              "type": "boolean",
              "enum": [
                false
              ]
            }
          },
          "required": [
            "key",
            "computed"
          ]
        }
      ]
    },
    "ClassPropertyDefinitionNonComputedNameBase": {
      "allOf": [
        {
          "$ref": "#/definitions/PropertyDefinitionBase"
        },
        {
          "type": "object",
          "properties": {
            "key": {
              "$ref": "#/definitions/ClassPropertyNameNonComputed"
            },
            "computed": {
              "type": "boolean",
              "enum": [
                false
              ]
            }
          },
          "required": [
            "key",
            "computed"
          ]
        }
      ]
    },
    "ClassPropertyNameNonComputed": {
      "oneOf": [
        {
          "$ref": "#/definitions/PrivateIdentifier"
        },
        {
          "$ref": "#/definitions/PropertyNameNonComputed"
        }
      ]
    },
    "Comment": {
      "oneOf": [
        {
          "$ref": "#/definitions/BlockComment"
        },
        {
          "$ref": "#/definitions/LineComment"
        }
      ]
    },
    "ConditionalExpression": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ConditionalExpression"
          ]
        },
        "test": {
          "$ref": "#/definitions/Expression"
        },
        "consequent": {
          "$ref": "#/definitions/Expression"
        },
        "alternate": {
          "$ref": "#/definitions/Expression"
        }
      },
      "required": [
        "type",
        "test",
        "consequent",
        "alternate"
      ]
    },
    "ContinueStatement": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ContinueStatement"
          ]
        },
        "label": {
          "oneOf": [
            {
              "$ref": "#/definitions/Identifier"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "type",
        "label"
      ]
    },
    "DebuggerStatement": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "DebuggerStatement"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "Decorator": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Decorator"
          ]
        },
        "expression": {
          "$ref": "#/definitions/LeftHandSideExpression"
        }
      },
      "required": [
        "type",
        "expression"
      ]
    },
    "DefaultExportDeclarations": {
      "oneOf": [
        {
          "$ref": "#/definitions/ClassDeclarationWithOptionalName"
        },
        {
          "$ref": "#/definitions/Expression"
        },
        {
          "$ref": "#/definitions/FunctionDeclarationWithName"
        },
        {
          "$ref": "#/definitions/FunctionDeclarationWithOptionalName"
        },
        {
          "$ref": "#/definitions/TSDeclareFunction"
        },
        {
          "$ref": "#/definitions/TSEnumDeclaration"
        },
        {
          "$ref": "#/definitions/TSInterfaceDeclaration"
        },
        {
          "$ref": "#/definitions/TSModuleDeclaration"
        },
        {
          "$ref": "#/definitions/TSTypeAliasDeclaration"
        },
        {
          "$ref": "#/definitions/VariableDeclaration"
        }
      ]
    },
    "DestructuringPattern": {
      "oneOf": [
        {
          "$ref": "#/definitions/ArrayPattern"
        },
        {
          "$ref": "#/definitions/AssignmentPattern"
        },
        {
          "$ref": "#/definitions/Identifier"
        },
        {
          "$ref": "#/definitions/MemberExpression"
        },
        {
          "$ref": "#/definitions/ObjectPattern"
        },
        {
          "$ref": "#/definitions/RestElement"
        }
      ]
    },
    "DoWhileStatement": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "DoWhileStatement"
          ]
        },
        "test": {
          "$ref": "#/definitions/Expression"
        },
        "body": {
          "$ref": "#/definitions/Statement"
        }
      },
      "required": [
        "type",
        "test",
        "body"
      ]
    },
    "EntityName": {
      "oneOf": [
        {
          "$ref": "#/definitions/Identifier"
        },
        {
          "$ref": "#/definitions/ThisExpression"
        },
        {
          "$ref": "#/definitions/TSQualifiedName"
        }
      ]
    },
    "ExportAllDeclaration": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ExportAllDeclaration"
          ]
        },
        "assertions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImportAttribute"
          }
        },
        "exported": {
          "oneOf": [
            {
              "$ref": "#/definitions/Identifier"
            },
            {
              "type": "null"
            }
          ]
        },
        "exportKind": {
          "$ref": "#/definitions/ExportKind"
        },
        "source": {
          "$ref": "#/definitions/StringLiteral"
        }
      },
      "required": [
        "type",
        "assertions",
        "exported",
        "exportKind",
        "source"
      ]
    },
    "ExportAndImportKind": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "type"
          ]
        },
        {
          "type": "string",
          "enum": [
            "value"
          ]
        }
      ]
    },
    "ExportDefaultDeclaration": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ExportDefaultDeclaration"
          ]
        },
        "declaration": {
          "$ref": "#/definitions/DefaultExportDeclarations"
        },
        "exportKind": {
          "$ref": "#/definitions/ExportKind"
        }
      },
      "required": [
        "type",
        "declaration",
        "exportKind"
      ]
    },
    "ExportKind": {
      "$ref": "#/definitions/ExportAndImportKind"
    },
    "ExportNamedDeclaration": {
      "oneOf": [
        {
          "$ref": "#/definitions/ExportNamedDeclarationWithoutSourceWithMultiple"
        },
        {
          "$ref": "#/definitions/ExportNamedDeclarationWithoutSourceWithSingle"
        },
        {
          "$ref": "#/definitions/ExportNamedDeclarationWithSource"
        }
      ]
    },
    "ExportNamedDeclarationBase": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ExportNamedDeclaration"
          ]
        },
        "assertions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImportAttribute"
          }
        },
        "declaration": {
          "oneOf": [
            {
              "$ref": "#/definitions/NamedExportDeclarations"
            },
            {
              "type": "null"
            }
          ]
        },
        "exportKind": {
          "$ref": "#/definitions/ExportKind"
        },
        "source": {
          "oneOf": [
            {
              "$ref": "#/definitions/StringLiteral"
            },
            {
              "type": "null"
            }
          ]
        },
        "specifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExportSpecifier"
          }
        }
      },
      "required": [
        "type",
        "assertions",
        "declaration",
        "exportKind",
        "source",
        "specifiers"
      ]
    },
    "ExportNamedDeclarationWithoutSourceWithMultiple": {
      "allOf": [
        {
          "$ref": "#/definitions/ExportNamedDeclarationBase"
        },
        {
          "type": "object",
          "properties": {
            "assertions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ImportAttribute"
              }
            },
            "declaration": {
              "$ref": "#/definitions/NamedExportDeclarations"
            },
            "source": {
              "type": "null"
            },
            "specifiers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExportSpecifier"
              }
            }
          },
          "required": [
            "assertions",
            "declaration",
            "source",
            "specifiers"
          ]
        }
      ]
    },
    "ExportNamedDeclarationWithoutSourceWithSingle": {
      "allOf": [
        {
          "$ref": "#/definitions/ExportNamedDeclarationBase"
        },
        {
          "type": "object",
          "properties": {
            "assertions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ImportAttribute"
              }
            },
            "declaration": {
              "type": "null"
            },
            "source": {
              "type": "null"
            },
            "specifiers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExportSpecifier"
              }
            }
          },
          "required": [
            "assertions",
            "declaration",
            "source",
            "specifiers"
          ]
        }
      ]
    },
    "ExportNamedDeclarationWithSource": {
      "allOf": [
        {
          "$ref": "#/definitions/ExportNamedDeclarationBase"
        },
        {
          "type": "object",
          "properties": {
            "assertions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ImportAttribute"
              }
            },
            "declaration": {
              "type": "null"
            },
            "source": {
              "$ref": "#/definitions/StringLiteral"
            },
            "specifiers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExportSpecifier"
              }
            }
          },
          "required": [
            "assertions",
            "declaration",
            "source",
            "specifiers"
          ]
        }
      ]
    },
    "ExportSpecifier": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ExportSpecifier"
          ]
        },
        "local": {
          "$ref": "#/definitions/Identifier"
        },
        "exported": {
          "$ref": "#/definitions/Identifier"
        },
        "exportKind": {
          "$ref": "#/definitions/ExportKind"
        }
      },
      "required": [
        "type",
        "local",
        "exported",
        "exportKind"
      ]
    },
    "Expression": {
      "oneOf": [
        {
          "$ref": "#/definitions/ArrayExpression"
        },
        {
          "$ref": "#/definitions/ArrayPattern"
        },
        {
          "$ref": "#/definitions/ArrowFunctionExpression"
        },
        {
          "$ref": "#/definitions/AssignmentExpression"
        },
        {
          "$ref": "#/definitions/AwaitExpression"
        },
        {
          "$ref": "#/definitions/BinaryExpression"
        },
        {
          "$ref": "#/definitions/CallExpression"
        },
        {
          "$ref": "#/definitions/ChainExpression"
        },
        {
          "$ref": "#/definitions/ClassExpression"
        },
        {
          "$ref": "#/definitions/ConditionalExpression"
        },
        {
          "$ref": "#/definitions/FunctionExpression"
        },
        {
          "$ref": "#/definitions/Identifier"
        },
        {
          "$ref": "#/definitions/ImportExpression"
        },
        {
          "$ref": "#/definitions/JSXElement"
        },
        {
          "$ref": "#/definitions/JSXFragment"
        },
        {
          "$ref": "#/definitions/LiteralExpression"
        },
        {
          "$ref": "#/definitions/LogicalExpression"
        },
        {
          "$ref": "#/definitions/MemberExpression"
        },
        {
          "$ref": "#/definitions/MetaProperty"
        },
        {
          "$ref": "#/definitions/NewExpression"
        },
        {
          "$ref": "#/definitions/ObjectExpression"
        },
        {
          "$ref": "#/definitions/ObjectPattern"
        },
        {
          "$ref": "#/definitions/SequenceExpression"
        },
        {
          "$ref": "#/definitions/Super"
        },
        {
          "$ref": "#/definitions/TaggedTemplateExpression"
        },
        {
          "$ref": "#/definitions/TemplateLiteral"
        },
        {
          "$ref": "#/definitions/ThisExpression"
        },
        {
          "$ref": "#/definitions/TSAsExpression"
        },
        {
          "$ref": "#/definitions/TSInstantiationExpression"
        },
        {
          "$ref": "#/definitions/TSNonNullExpression"
        },
        {
          "$ref": "#/definitions/TSTypeAssertion"
        },
        {
          "$ref": "#/definitions/UnaryExpression"
        },
        {
          "$ref": "#/definitions/UpdateExpression"
        },
        {
          "$ref": "#/definitions/YieldExpression"
        }
      ]
    },
    "ExpressionStatement": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ExpressionStatement"
          ]
        },
        "expression": {
          "$ref": "#/definitions/Expression"
        },
        "directive": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "expression"
      ]
    },
    "ForInitialiser": {
      "oneOf": [
        {
          "$ref": "#/definitions/Expression"
        },
        {
          "$ref": "#/definitions/VariableDeclaration"
        }
      ]
    },
    "ForInStatement": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ForInStatement"
          ]
        },
        "left": {
          "$ref": "#/definitions/ForInitialiser"
        },
        "right": {
          "$ref": "#/definitions/Expression"
        },
        "body": {
          "$ref": "#/definitions/Statement"
        }
      },
      "required": [
        "type",
        "left",
        "right",
        "body"
      ]
    },
    "ForOfStatement": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ForOfStatement"
          ]
        },
        "left": {
          "$ref": "#/definitions/ForInitialiser"
        },
        "right": {
          "$ref": "#/definitions/Expression"
        },
        "body": {
          "$ref": "#/definitions/Statement"
        },
        "await": {
          "type": "boolean"
        }
      },
      "required": [
        "type",
        "left",
        "right",
        "body",
        "await"
      ]
    },
    "ForStatement": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ForStatement"
          ]
        },
        "init": {
          "oneOf": [
            {
              "$ref": "#/definitions/Expression"
            },
            {
              "$ref": "#/definitions/ForInitialiser"
            },
            {
              "type": "null"
            }
          ]
        },
        "test": {
          "oneOf": [
            {
              "$ref": "#/definitions/Expression"
            },
            {
              "type": "null"
            }
          ]
        },
        "update": {
          "oneOf": [
            {
              "$ref": "#/definitions/Expression"
            },
            {
              "type": "null"
            }
          ]
        },
        "body": {
          "$ref": "#/definitions/Statement"
        }
      },
      "required": [
        "type",
        "init",
        "test",
        "update",
        "body"
      ]
    },
    "FunctionBase": {
      "type": "object",
      "properties": {
        "async": {
          "type": "boolean"
        },
        "body": {
          "oneOf": [
            {
              "$ref": "#/definitions/BlockStatement"
            },
            {
              "$ref": "#/definitions/Expression"
            },
            {
              "type": "null"
            }
          ]
        },
        "declare": {
          "type": "boolean"
        },
        "expression": {
          "type": "boolean"
        },
        "generator": {
          "type": "boolean"
        },
        "id": {
          "oneOf": [
            {
              "$ref": "#/definitions/Identifier"
            },
            {
              "type": "null"
            }
          ]
        },
        "params": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Parameter"
          }
        },
        "returnType": {
          "$ref": "#/definitions/TSTypeAnnotation"
        },
        "typeParameters": {
          "$ref": "#/definitions/TSTypeParameterDeclaration"
        }
      },
      "required": [
        "async",
        "expression",
        "generator",
        "id",
        "params"
      ]
    },
    "FunctionDeclarationBase": {
      "allOf": [
        {
          "$ref": "#/definitions/FunctionBase"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "FunctionDeclaration"
              ]
            },
            "body": {
              "$ref": "#/definitions/BlockStatement"
            },
            "declare": {
              "type": "boolean",
              "enum": [
                false
              ]
            },
            "expression": {
              "type": "boolean",
              "enum": [
                false
              ]
            }
          },
          "required": [
            "type",
            "body",
            "expression"
          ]
        }
      ]
    },
    "FunctionDeclarationWithName": {
      "allOf": [
        {
          "$ref": "#/definitions/FunctionDeclarationBase"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "$ref": "#/definitions/Identifier"
            }
          },
          "required": [
            "id"
          ]
        }
      ]
    },
    "FunctionDeclarationWithOptionalName": {
      "allOf": [
        {
          "$ref": "#/definitions/FunctionDeclarationBase"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "oneOf": [
                {
                  "$ref": "#/definitions/Identifier"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "required": [
            "id"
          ]
        }
      ]
    },
    "FunctionExpression": {
      "allOf": [
        {
          "$ref": "#/definitions/FunctionBase"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "FunctionExpression"
              ]
            },
            "body": {
              "$ref": "#/definitions/BlockStatement"
            },
            "expression": {
              "type": "boolean",
              "enum": [
                false
              ]
            }
          },
          "required": [
            "type",
            "body",
            "expression"
          ]
        }
      ]
    },
    "Identifier": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Identifier"
          ]
        },
        "name": {
          "type": "string"
        },
        "typeAnnotation": {
          "$ref": "#/definitions/TSTypeAnnotation"
        },
        "optional": {
          "type": "boolean"
        },
        "decorators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Decorator"
          }
        }
      },
      "required": [
        "type",
        "name"
      ]
    },
    "IdentifierToken": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Identifier"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "IfStatement": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "IfStatement"
          ]
        },
        "test": {
          "$ref": "#/definitions/Expression"
        },
        "consequent": {
          "$ref": "#/definitions/Statement"
        },
        "alternate": {
          "oneOf": [
            {
              "$ref": "#/definitions/Statement"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "type",
        "test",
        "consequent",
        "alternate"
      ]
    },
    "ImportAttribute": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ImportAttribute"
          ]
        },
        "key": {
          "oneOf": [
            {
              "$ref": "#/definitions/Identifier"
            },
            {
              "$ref": "#/definitions/Literal"
            }
          ]
        },
        "value": {
          "$ref": "#/definitions/Literal"
        }
      },
      "required": [
        "type",
        "key",
        "value"
      ]
    },
    "ImportClause": {
      "oneOf": [
        {
          "$ref": "#/definitions/ImportDefaultSpecifier"
        },
        {
          "$ref": "#/definitions/ImportNamespaceSpecifier"
        },
        {
          "$ref": "#/definitions/ImportSpecifier"
        }
      ]
    },
    "ImportDeclaration": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ImportDeclaration"
          ]
        },
        "assertions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImportAttribute"
          }
        },
        "importKind": {
          "$ref": "#/definitions/ImportKind"
        },
        "source": {
          "$ref": "#/definitions/StringLiteral"
        },
        "specifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImportClause"
          }
        }
      },
      "required": [
        "type",
        "assertions",
        "importKind",
        "source",
        "specifiers"
      ]
    },
    "ImportDefaultSpecifier": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ImportDefaultSpecifier"
          ]
        },
        "local": {
          "$ref": "#/definitions/Identifier"
        }
      },
      "required": [
        "type",
        "local"
      ]
    },
    "ImportExpression": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ImportExpression"
          ]
        },
        "source": {
          "$ref": "#/definitions/Expression"
        },
        "attributes": {
          "oneOf": [
            {
              "$ref": "#/definitions/Expression"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "type",
        "source",
        "attributes"
      ]
    },
    "ImportKind": {
      "$ref": "#/definitions/ExportAndImportKind"
    },
    "ImportNamespaceSpecifier": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ImportNamespaceSpecifier"
          ]
        },
        "local": {
          "$ref": "#/definitions/Identifier"
        }
      },
      "required": [
        "type",
        "local"
      ]
    },
    "ImportSpecifier": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ImportSpecifier"
          ]
        },
        "local": {
          "$ref": "#/definitions/Identifier"
        },
        "imported": {
          "$ref": "#/definitions/Identifier"
        },
        "importKind": {
          "$ref": "#/definitions/ImportKind"
        }
      },
      "required": [
        "type",
        "local",
        "imported",
        "importKind"
      ]
    },
    "JSXAttribute": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "JSXAttribute"
          ]
        },
        "name": {
          "oneOf": [
            {
              "$ref": "#/definitions/JSXIdentifier"
            },
            {
              "$ref": "#/definitions/JSXNamespacedName"
            }
          ]
        },
        "value": {
          "oneOf": [
            {
              "$ref": "#/definitions/JSXExpression"
            },
            {
              "$ref": "#/definitions/Literal"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "type",
        "name",
        "value"
      ]
    },
    "JSXChild": {
      "oneOf": [
        {
          "$ref": "#/definitions/JSXElement"
        },
        {
          "$ref": "#/definitions/JSXExpression"
        },
        {
          "$ref": "#/definitions/JSXFragment"
        },
        {
          "$ref": "#/definitions/JSXText"
        }
      ]
    },
    "JSXClosingElement": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "JSXClosingElement"
          ]
        },
        "name": {
          "$ref": "#/definitions/JSXTagNameExpression"
        }
      },
      "required": [
        "type",
        "name"
      ]
    },
    "JSXClosingFragment": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "JSXClosingFragment"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "JSXElement": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "JSXElement"
          ]
        },
        "openingElement": {
          "$ref": "#/definitions/JSXOpeningElement"
        },
        "closingElement": {
          "oneOf": [
            {
              "$ref": "#/definitions/JSXClosingElement"
            },
            {
              "type": "null"
            }
          ]
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JSXChild"
          }
        }
      },
      "required": [
        "type",
        "openingElement",
        "closingElement",
        "children"
      ]
    },
    "JSXEmptyExpression": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "JSXEmptyExpression"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "JSXExpression": {
      "oneOf": [
        {
          "$ref": "#/definitions/JSXEmptyExpression"
        },
        {
          "$ref": "#/definitions/JSXExpressionContainer"
        },
        {
          "$ref": "#/definitions/JSXSpreadChild"
        }
      ]
    },
    "JSXExpressionContainer": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "JSXExpressionContainer"
          ]
        },
        "expression": {
          "oneOf": [
            {
              "$ref": "#/definitions/Expression"
            },
            {
              "$ref": "#/definitions/JSXEmptyExpression"
            }
          ]
        }
      },
      "required": [
        "type",
        "expression"
      ]
    },
    "JSXFragment": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "JSXFragment"
          ]
        },
        "openingFragment": {
          "$ref": "#/definitions/JSXOpeningFragment"
        },
        "closingFragment": {
          "$ref": "#/definitions/JSXClosingFragment"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JSXChild"
          }
        }
      },
      "required": [
        "type",
        "openingFragment",
        "closingFragment",
        "children"
      ]
    },
    "JSXIdentifier": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "JSXIdentifier"
          ]
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "name"
      ]
    },
    "JSXIdentifierToken": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "JSXIdentifier"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "JSXMemberExpression": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "JSXMemberExpression"
          ]
        },
        "object": {
          "$ref": "#/definitions/JSXTagNameExpression"
        },
        "property": {
          "$ref": "#/definitions/JSXIdentifier"
        }
      },
      "required": [
        "type",
        "object",
        "property"
      ]
    },
    "JSXNamespacedName": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "JSXNamespacedName"
          ]
        },
        "namespace": {
          "$ref": "#/definitions/JSXIdentifier"
        },
        "name": {
          "$ref": "#/definitions/JSXIdentifier"
        }
      },
      "required": [
        "type",
        "namespace",
        "name"
      ]
    },
    "JSXOpeningElement": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "JSXOpeningElement"
          ]
        },
        "typeParameters": {
          "$ref": "#/definitions/TSTypeParameterInstantiation"
        },
        "selfClosing": {
          "type": "boolean"
        },
        "name": {
          "$ref": "#/definitions/JSXTagNameExpression"
        },
        "attributes": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/JSXAttribute"
              },
              {
                "$ref": "#/definitions/JSXSpreadAttribute"
              }
            ]
          }
        }
      },
      "required": [
        "type",
        "selfClosing",
        "name",
        "attributes"
      ]
    },
    "JSXOpeningFragment": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "JSXOpeningFragment"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "JSXSpreadAttribute": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "JSXSpreadAttribute"
          ]
        },
        "argument": {
          "$ref": "#/definitions/Expression"
        }
      },
      "required": [
        "type",
        "argument"
      ]
    },
    "JSXSpreadChild": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "JSXSpreadChild"
          ]
        },
        "expression": {
          "oneOf": [
            {
              "$ref": "#/definitions/Expression"
            },
            {
              "$ref": "#/definitions/JSXEmptyExpression"
            }
          ]
        }
      },
      "required": [
        "type",
        "expression"
      ]
    },
    "JSXTagNameExpression": {
      "oneOf": [
        {
          "$ref": "#/definitions/JSXIdentifier"
        },
        {
          "$ref": "#/definitions/JSXMemberExpression"
        },
        {
          "$ref": "#/definitions/JSXNamespacedName"
        }
      ]
    },
    "JSXText": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "JSXText"
          ]
        },
        "value": {
          "type": "string"
        },
        "raw": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "value",
        "raw"
      ]
    },
    "JSXTextToken": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "JSXText"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "KeywordToken": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Keyword"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "LabeledStatement": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "LabeledStatement"
          ]
        },
        "label": {
          "$ref": "#/definitions/Identifier"
        },
        "body": {
          "$ref": "#/definitions/Statement"
        }
      },
      "required": [
        "type",
        "label",
        "body"
      ]
    },
    "LeftHandSideExpression": {
      "oneOf": [
        {
          "$ref": "#/definitions/ArrayExpression"
        },
        {
          "$ref": "#/definitions/ArrayPattern"
        },
        {
          "$ref": "#/definitions/ArrowFunctionExpression"
        },
        {
          "$ref": "#/definitions/CallExpression"
        },
        {
          "$ref": "#/definitions/ClassExpression"
        },
        {
          "$ref": "#/definitions/FunctionExpression"
        },
        {
          "$ref": "#/definitions/Identifier"
        },
        {
          "$ref": "#/definitions/JSXElement"
        },
        {
          "$ref": "#/definitions/JSXFragment"
        },
        {
          "$ref": "#/definitions/LiteralExpression"
        },
        {
          "$ref": "#/definitions/MemberExpression"
        },
        {
          "$ref": "#/definitions/MetaProperty"
        },
        {
          "$ref": "#/definitions/ObjectExpression"
        },
        {
          "$ref": "#/definitions/ObjectPattern"
        },
        {
          "$ref": "#/definitions/SequenceExpression"
        },
        {
          "$ref": "#/definitions/Super"
        },
        {
          "$ref": "#/definitions/TaggedTemplateExpression"
        },
        {
          "$ref": "#/definitions/ThisExpression"
        },
        {
          "$ref": "#/definitions/TSAsExpression"
        },
        {
          "$ref": "#/definitions/TSNonNullExpression"
        },
        {
          "$ref": "#/definitions/TSTypeAssertion"
        }
      ]
    },
    "LineComment": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Line"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "Literal": {
      "oneOf": [
        {
          "$ref": "#/definitions/BooleanLiteral"
        },
        {
          "$ref": "#/definitions/NullLiteral"
        },
        {
          "$ref": "#/definitions/NumberLiteral"
        },
        {
          "$ref": "#/definitions/StringLiteral"
        }
      ]
    },
    "LiteralBase": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Literal"
          ]
        },
        "raw": {
          "type": "string"
        },
        "value": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "type",
        "raw",
        "value"
      ]
    },
    "LiteralExpression": {
      "oneOf": [
        {
          "$ref": "#/definitions/Literal"
        },
        {
          "$ref": "#/definitions/TemplateLiteral"
        }
      ]
    },
    "LogicalExpression": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "LogicalExpression"
          ]
        },
        "operator": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "??"
              ]
            },
            {
              "type": "string",
              "enum": [
                "&&"
              ]
            },
            {
              "type": "string",
              "enum": [
                "||"
              ]
            }
          ]
        },
        "left": {
          "$ref": "#/definitions/Expression"
        },
        "right": {
          "$ref": "#/definitions/Expression"
        }
      },
      "required": [
        "type",
        "operator",
        "left",
        "right"
      ]
    },
    "MemberExpression": {
      "oneOf": [
        {
          "$ref": "#/definitions/MemberExpressionComputedName"
        },
        {
          "$ref": "#/definitions/MemberExpressionNonComputedName"
        }
      ]
    },
    "MemberExpressionBase": {
      "type": "object",
      "properties": {
        "object": {
          "$ref": "#/definitions/LeftHandSideExpression"
        },
        "property": {
          "oneOf": [
            {
              "$ref": "#/definitions/Expression"
            },
            {
              "$ref": "#/definitions/Identifier"
            },
            {
              "$ref": "#/definitions/PrivateIdentifier"
            }
          ]
        },
        "computed": {
          "type": "boolean"
        },
        "optional": {
          "type": "boolean"
        }
      },
      "required": [
        "object",
        "property",
        "computed",
        "optional"
      ]
    },
    "MemberExpressionComputedName": {
      "allOf": [
        {
          "$ref": "#/definitions/MemberExpressionBase"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "MemberExpression"
              ]
            },
            "property": {
              "$ref": "#/definitions/Expression"
            },
            "computed": {
              "type": "boolean",
              "enum": [
                true
              ]
            }
          },
          "required": [
            "type",
            "property",
            "computed"
          ]
        }
      ]
    },
    "MemberExpressionNonComputedName": {
      "allOf": [
        {
          "$ref": "#/definitions/MemberExpressionBase"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "MemberExpression"
              ]
            },
            "property": {
              "oneOf": [
                {
                  "$ref": "#/definitions/Identifier"
                },
                {
                  "$ref": "#/definitions/PrivateIdentifier"
                }
              ]
            },
            "computed": {
              "type": "boolean",
              "enum": [
                false
              ]
            }
          },
          "required": [
            "type",
            "property",
            "computed"
          ]
        }
      ]
    },
    "MetaProperty": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "MetaProperty"
          ]
        },
        "meta": {
          "$ref": "#/definitions/Identifier"
        },
        "property": {
          "$ref": "#/definitions/Identifier"
        }
      },
      "required": [
        "type",
        "meta",
        "property"
      ]
    },
    "MethodDefinition": {
      "oneOf": [
        {
          "$ref": "#/definitions/MethodDefinitionComputedName"
        },
        {
          "$ref": "#/definitions/MethodDefinitionNonComputedName"
        }
      ]
    },
    "MethodDefinitionBase": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/PropertyName"
        },
        "value": {
          "oneOf": [
            {
              "$ref": "#/definitions/FunctionExpression"
            },
            {
              "$ref": "#/definitions/TSEmptyBodyFunctionExpression"
            }
          ]
        },
        "computed": {
          "type": "boolean"
        },
        "static": {
          "type": "boolean"
        },
        "kind": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "constructor"
              ]
            },
            {
              "type": "string",
              "enum": [
                "get"
              ]
            },
            {
              "type": "string",
              "enum": [
                "method"
              ]
            },
            {
              "type": "string",
              "enum": [
                "set"
              ]
            }
          ]
        },
        "optional": {
          "type": "boolean"
        },
        "decorators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Decorator"
          }
        },
        "accessibility": {
          "$ref": "#/definitions/Accessibility"
        },
        "typeParameters": {
          "$ref": "#/definitions/TSTypeParameterDeclaration"
        },
        "override": {
          "type": "boolean"
        }
      },
      "required": [
        "key",
        "value",
        "computed",
        "static",
        "kind"
      ]
    },
    "MethodDefinitionComputedName": {
      "allOf": [
        {
          "$ref": "#/definitions/MethodDefinitionComputedNameBase"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "MethodDefinition"
              ]
            }
          },
          "required": [
            "type"
          ]
        }
      ]
    },
    "MethodDefinitionComputedNameBase": {
      "allOf": [
        {
          "$ref": "#/definitions/MethodDefinitionBase"
        },
        {
          "type": "object",
          "properties": {
            "key": {
              "$ref": "#/definitions/PropertyNameComputed"
            },
            "computed": {
              "type": "boolean",
              "enum": [
                true
              ]
            }
          },
          "required": [
            "key",
            "computed"
          ]
        }
      ]
    },
    "MethodDefinitionNonComputedName": {
      "allOf": [
        {
          "$ref": "#/definitions/ClassMethodDefinitionNonComputedNameBase"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "MethodDefinition"
              ]
            }
          },
          "required": [
            "type"
          ]
        }
      ]
    },
    "MethodDefinitionNonComputedNameBase": {
      "allOf": [
        {
          "$ref": "#/definitions/MethodDefinitionBase"
        },
        {
          "type": "object",
          "properties": {
            "key": {
              "$ref": "#/definitions/PropertyNameNonComputed"
            },
            "computed": {
              "type": "boolean",
              "enum": [
                false
              ]
            }
          },
          "required": [
            "key",
            "computed"
          ]
        }
      ]
    },
    "Modifier": {
      "oneOf": [
        {
          "$ref": "#/definitions/TSAbstractKeyword"
        },
        {
          "$ref": "#/definitions/TSAsyncKeyword"
        },
        {
          "$ref": "#/definitions/TSPrivateKeyword"
        },
        {
          "$ref": "#/definitions/TSProtectedKeyword"
        },
        {
          "$ref": "#/definitions/TSPublicKeyword"
        },
        {
          "$ref": "#/definitions/TSReadonlyKeyword"
        },
        {
          "$ref": "#/definitions/TSStaticKeyword"
        }
      ]
    },
    "NamedExportDeclarations": {
      "oneOf": [
        {
          "$ref": "#/definitions/ClassDeclarationWithName"
        },
        {
          "$ref": "#/definitions/ClassDeclarationWithOptionalName"
        },
        {
          "$ref": "#/definitions/FunctionDeclarationWithName"
        },
        {
          "$ref": "#/definitions/FunctionDeclarationWithOptionalName"
        },
        {
          "$ref": "#/definitions/TSDeclareFunction"
        },
        {
          "$ref": "#/definitions/TSEnumDeclaration"
        },
        {
          "$ref": "#/definitions/TSInterfaceDeclaration"
        },
        {
          "$ref": "#/definitions/TSModuleDeclaration"
        },
        {
          "$ref": "#/definitions/TSTypeAliasDeclaration"
        },
        {
          "$ref": "#/definitions/VariableDeclaration"
        }
      ]
    },
    "NewExpression": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "NewExpression"
          ]
        },
        "callee": {
          "$ref": "#/definitions/LeftHandSideExpression"
        },
        "arguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CallExpressionArgument"
          }
        },
        "typeParameters": {
          "$ref": "#/definitions/TSTypeParameterInstantiation"
        }
      },
      "required": [
        "type",
        "callee",
        "arguments"
      ]
    },
    "NullLiteral": {
      "allOf": [
        {
          "$ref": "#/definitions/LiteralBase"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "type": "null"
            },
            "raw": {
              "type": "string",
              "enum": [
                "null"
              ]
            }
          },
          "required": [
            "value",
            "raw"
          ]
        }
      ]
    },
    "NullToken": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Null"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "NumberLiteral": {
      "allOf": [
        {
          "$ref": "#/definitions/LiteralBase"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "type": "number"
            }
          },
          "required": [
            "value"
          ]
        }
      ]
    },
    "NumericToken": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Numeric"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "ObjectExpression": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ObjectExpression"
          ]
        },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObjectLiteralElement"
          }
        }
      },
      "required": [
        "type",
        "properties"
      ]
    },
    "ObjectLiteralElement": {
      "oneOf": [
        {
          "$ref": "#/definitions/MethodDefinition"
        },
        {
          "$ref": "#/definitions/Property"
        },
        {
          "$ref": "#/definitions/SpreadElement"
        }
      ]
    },
    "ObjectPattern": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ObjectPattern"
          ]
        },
        "properties": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/Property"
              },
              {
                "$ref": "#/definitions/RestElement"
              }
            ]
          }
        },
        "typeAnnotation": {
          "$ref": "#/definitions/TSTypeAnnotation"
        },
        "optional": {
          "type": "boolean"
        },
        "decorators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Decorator"
          }
        }
      },
      "required": [
        "type",
        "properties"
      ]
    },
    "Parameter": {
      "oneOf": [
        {
          "$ref": "#/definitions/ArrayPattern"
        },
        {
          "$ref": "#/definitions/AssignmentPattern"
        },
        {
          "$ref": "#/definitions/Identifier"
        },
        {
          "$ref": "#/definitions/ObjectPattern"
        },
        {
          "$ref": "#/definitions/RestElement"
        },
        {
          "$ref": "#/definitions/TSParameterProperty"
        }
      ]
    },
    "PrivateIdentifier": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "PrivateIdentifier"
          ]
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "name"
      ]
    },
    "ProgramStatement": {
      "oneOf": [
        {
          "$ref": "#/definitions/ExportAllDeclaration"
        },
        {
          "$ref": "#/definitions/ExportDefaultDeclaration"
        },
        {
          "$ref": "#/definitions/ExportNamedDeclaration"
        },
        {
          "$ref": "#/definitions/ImportDeclaration"
        },
        {
          "$ref": "#/definitions/Statement"
        },
        {
          "$ref": "#/definitions/TSImportEqualsDeclaration"
        },
        {
          "$ref": "#/definitions/TSNamespaceExportDeclaration"
        }
      ]
    },
    "Property": {
      "oneOf": [
        {
          "$ref": "#/definitions/PropertyComputedName"
        },
        {
          "$ref": "#/definitions/PropertyNonComputedName"
        }
      ]
    },
    "PropertyBase": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Property"
          ]
        },
        "key": {
          "$ref": "#/definitions/PropertyName"
        },
        "value": {
          "oneOf": [
            {
              "$ref": "#/definitions/AssignmentPattern"
            },
            {
              "$ref": "#/definitions/BindingName"
            },
            {
              "$ref": "#/definitions/Expression"
            },
            {
              "$ref": "#/definitions/TSEmptyBodyFunctionExpression"
            }
          ]
        },
        "computed": {
          "type": "boolean"
        },
        "method": {
          "type": "boolean"
        },
        "shorthand": {
          "type": "boolean"
        },
        "optional": {
          "type": "boolean"
        },
        "kind": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "get"
              ]
            },
            {
              "type": "string",
              "enum": [
                "init"
              ]
            },
            {
              "type": "string",
              "enum": [
                "set"
              ]
            }
          ]
        }
      },
      "required": [
        "type",
        "key",
        "value",
        "computed",
        "method",
        "shorthand",
        "kind"
      ]
    },
    "PropertyComputedName": {
      "allOf": [
        {
          "$ref": "#/definitions/PropertyBase"
        },
        {
          "type": "object",
          "properties": {
            "key": {
              "$ref": "#/definitions/PropertyNameComputed"
            },
            "computed": {
              "type": "boolean",
              "enum": [
                true
              ]
            }
          },
          "required": [
            "key",
            "computed"
          ]
        }
      ]
    },
    "PropertyDefinition": {
      "oneOf": [
        {
          "$ref": "#/definitions/PropertyDefinitionComputedName"
        },
        {
          "$ref": "#/definitions/PropertyDefinitionNonComputedName"
        }
      ]
    },
    "PropertyDefinitionBase": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/PropertyName"
        },
        "value": {
          "oneOf": [
            {
              "$ref": "#/definitions/Expression"
            },
            {
              "type": "null"
            }
          ]
        },
        "computed": {
          "type": "boolean"
        },
        "static": {
          "type": "boolean"
        },
        "declare": {
          "type": "boolean"
        },
        "readonly": {
          "type": "boolean"
        },
        "decorators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Decorator"
          }
        },
        "accessibility": {
          "$ref": "#/definitions/Accessibility"
        },
        "optional": {
          "type": "boolean"
        },
        "definite": {
          "type": "boolean"
        },
        "typeAnnotation": {
          "$ref": "#/definitions/TSTypeAnnotation"
        },
        "override": {
          "type": "boolean"
        }
      },
      "required": [
        "key",
        "value",
        "computed",
        "static",
        "declare"
      ]
    },
    "PropertyDefinitionComputedName": {
      "allOf": [
        {
          "$ref": "#/definitions/PropertyDefinitionComputedNameBase"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PropertyDefinition"
              ]
            }
          },
          "required": [
            "type"
          ]
        }
      ]
    },
    "PropertyDefinitionComputedNameBase": {
      "allOf": [
        {
          "$ref": "#/definitions/PropertyDefinitionBase"
        },
        {
          "type": "object",
          "properties": {
            "key": {
              "$ref": "#/definitions/PropertyNameComputed"
            },
            "computed": {
              "type": "boolean",
              "enum": [
                true
              ]
            }
          },
          "required": [
            "key",
            "computed"
          ]
        }
      ]
    },
    "PropertyDefinitionNonComputedName": {
      "allOf": [
        {
          "$ref": "#/definitions/ClassPropertyDefinitionNonComputedNameBase"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PropertyDefinition"
              ]
            }
          },
          "required": [
            "type"
          ]
        }
      ]
    },
    "PropertyDefinitionNonComputedNameBase": {
      "allOf": [
        {
          "$ref": "#/definitions/PropertyDefinitionBase"
        },
        {
          "type": "object",
          "properties": {
            "key": {
              "$ref": "#/definitions/PropertyNameNonComputed"
            },
            "computed": {
              "type": "boolean",
              "enum": [
                false
              ]
            }
          },
          "required": [
            "key",
            "computed"
          ]
        }
      ]
    },
    "PropertyName": {
      "oneOf": [
        {
          "$ref": "#/definitions/ClassPropertyNameNonComputed"
        },
        {
          "$ref": "#/definitions/PropertyNameComputed"
        },
        {
          "$ref": "#/definitions/PropertyNameNonComputed"
        }
      ]
    },
    "PropertyNameComputed": {
      "$ref": "#/definitions/Expression"
    },
    "PropertyNameNonComputed": {
      "oneOf": [
        {
          "$ref": "#/definitions/Identifier"
        },
        {
          "$ref": "#/definitions/NumberLiteral"
        },
        {
          "$ref": "#/definitions/StringLiteral"
        }
      ]
    },
    "PropertyNonComputedName": {
      "allOf": [
        {
          "$ref": "#/definitions/PropertyBase"
        },
        {
          "type": "object",
          "properties": {
            "key": {
              "$ref": "#/definitions/PropertyNameNonComputed"
            },
            "computed": {
              "type": "boolean",
              "enum": [
                false
              ]
            }
          },
          "required": [
            "key",
            "computed"
          ]
        }
      ]
    },
    "PunctuatorToken": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Punctuator"
          ]
        },
        "value": {
          "type": "string",
          "enum": [
            "{",
            "}",
            "(",
            ")",
            "[",
            "]",
            ".",
            "...",
            ";",
            ",",
            "?.",
            "<",
            "</",
            ">",
            "<=",
            ">=",
            "==",
            "!=",
            "===",
            "!==",
            "=>",
            "+",
            "-",
            "*",
            "**",
            "/",
            "%",
            "++",
            "--",
            "<<",
            ">>",
            ">>>",
            "&",
            "|",
            "^",
            "!",
            "~",
            "&&",
            "||",
            "?",
            ":",
            "@",
            "??",
            "`",
            "#"
          ]
        }
      },
      "required": [
        "type",
        "value"
      ]
    },
    "PunctuatorTokenToText": {
      "allOf": [
        {
          "$ref": "#/definitions/AssignmentOperatorToText"
        },
        {
          "type": "object",
          "properties": {
            "OpenBraceToken": {
              "type": "string",
              "enum": [
                "{"
              ]
            },
            "CloseBraceToken": {
              "type": "string",
              "enum": [
                "}"
              ]
            },
            "OpenParenToken": {
              "type": "string",
              "enum": [
                "("
              ]
            },
            "CloseParenToken": {
              "type": "string",
              "enum": [
                ")"
              ]
            },
            "OpenBracketToken": {
              "type": "string",
              "enum": [
                "["
              ]
            },
            "CloseBracketToken": {
              "type": "string",
              "enum": [
                "]"
              ]
            },
            "DotToken": {
              "type": "string",
              "enum": [
                "."
              ]
            },
            "DotDotDotToken": {
              "type": "string",
              "enum": [
                "..."
              ]
            },
            "SemicolonToken": {
              "type": "string",
              "enum": [
                ";"
              ]
            },
            "CommaToken": {
              "type": "string",
              "enum": [
                ","
              ]
            },
            "QuestionDotToken": {
              "type": "string",
              "enum": [
                "?."
              ]
            },
            "LessThanToken": {
              "type": "string",
              "enum": [
                "<"
              ]
            },
            "LessThanSlashToken": {
              "type": "string",
              "enum": [
                "</"
              ]
            },
            "GreaterThanToken": {
              "type": "string",
              "enum": [
                ">"
              ]
            },
            "LessThanEqualsToken": {
              "type": "string",
              "enum": [
                "<="
              ]
            },
            "GreaterThanEqualsToken": {
              "type": "string",
              "enum": [
                ">="
              ]
            },
            "EqualsEqualsToken": {
              "type": "string",
              "enum": [
                "=="
              ]
            },
            "ExclamationEqualsToken": {
              "type": "string",
              "enum": [
                "!="
              ]
            },
            "EqualsEqualsEqualsToken": {
              "type": "string",
              "enum": [
                "==="
              ]
            },
            "ExclamationEqualsEqualsToken": {
              "type": "string",
              "enum": [
                "!=="
              ]
            },
            "EqualsGreaterThanToken": {
              "type": "string",
              "enum": [
                "=>"
              ]
            },
            "PlusToken": {
              "type": "string",
              "enum": [
                "+"
              ]
            },
            "MinusToken": {
              "type": "string",
              "enum": [
                "-"
              ]
            },
            "AsteriskToken": {
              "type": "string",
              "enum": [
                "*"
              ]
            },
            "AsteriskAsteriskToken": {
              "type": "string",
              "enum": [
                "**"
              ]
            },
            "SlashToken": {
              "type": "string",
              "enum": [
                "/"
              ]
            },
            "PercentToken": {
              "type": "string",
              "enum": [
                "%"
              ]
            },
            "PlusPlusToken": {
              "type": "string",
              "enum": [
                "++"
              ]
            },
            "MinusMinusToken": {
              "type": "string",
              "enum": [
                "--"
              ]
            },
            "LessThanLessThanToken": {
              "type": "string",
              "enum": [
                "<<"
              ]
            },
            "GreaterThanGreaterThanToken": {
              "type": "string",
              "enum": [
                ">>"
              ]
            },
            "GreaterThanGreaterThanGreaterThanToken": {
              "type": "string",
              "enum": [
                ">>>"
              ]
            },
            "AmpersandToken": {
              "type": "string",
              "enum": [
                "&"
              ]
            },
            "BarToken": {
              "type": "string",
              "enum": [
                "|"
              ]
            },
            "CaretToken": {
              "type": "string",
              "enum": [
                "^"
              ]
            },
            "ExclamationToken": {
              "type": "string",
              "enum": [
                "!"
              ]
            },
            "TildeToken": {
              "type": "string",
              "enum": [
                "~"
              ]
            },
            "AmpersandAmpersandToken": {
              "type": "string",
              "enum": [
                "&&"
              ]
            },
            "BarBarToken": {
              "type": "string",
              "enum": [
                "||"
              ]
            },
            "QuestionToken": {
              "type": "string",
              "enum": [
                "?"
              ]
            },
            "ColonToken": {
              "type": "string",
              "enum": [
                ":"
              ]
            },
            "AtToken": {
              "type": "string",
              "enum": [
                "@"
              ]
            },
            "QuestionQuestionToken": {
              "type": "string",
              "enum": [
                "??"
              ]
            },
            "BacktickToken": {
              "type": "string",
              "enum": [
                "`"
              ]
            },
            "HashToken": {
              "type": "string",
              "enum": [
                "#"
              ]
            }
          },
          "required": [
            "OpenBraceToken",
            "CloseBraceToken",
            "OpenParenToken",
            "CloseParenToken",
            "OpenBracketToken",
            "CloseBracketToken",
            "DotToken",
            "DotDotDotToken",
            "SemicolonToken",
            "CommaToken",
            "QuestionDotToken",
            "LessThanToken",
            "LessThanSlashToken",
            "GreaterThanToken",
            "LessThanEqualsToken",
            "GreaterThanEqualsToken",
            "EqualsEqualsToken",
            "ExclamationEqualsToken",
            "EqualsEqualsEqualsToken",
            "ExclamationEqualsEqualsToken",
            "EqualsGreaterThanToken",
            "PlusToken",
            "MinusToken",
            "AsteriskToken",
            "AsteriskAsteriskToken",
            "SlashToken",
            "PercentToken",
            "PlusPlusToken",
            "MinusMinusToken",
            "LessThanLessThanToken",
            "GreaterThanGreaterThanToken",
            "GreaterThanGreaterThanGreaterThanToken",
            "AmpersandToken",
            "BarToken",
            "CaretToken",
            "ExclamationToken",
            "TildeToken",
            "AmpersandAmpersandToken",
            "BarBarToken",
            "QuestionToken",
            "ColonToken",
            "AtToken",
            "QuestionQuestionToken",
            "BacktickToken",
            "HashToken"
          ]
        }
      ]
    },
    "RegularExpressionToken": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "RegularExpression"
          ]
        },
        "regex": {
          "type": "object",
          "properties": {
            "pattern": {
              "type": "string"
            },
            "flags": {
              "type": "string"
            }
          },
          "required": [
            "pattern",
            "flags"
          ]
        }
      },
      "required": [
        "type",
        "regex"
      ]
    },
    "RestElement": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "RestElement"
          ]
        },
        "argument": {
          "$ref": "#/definitions/DestructuringPattern"
        },
        "typeAnnotation": {
          "$ref": "#/definitions/TSTypeAnnotation"
        },
        "optional": {
          "type": "boolean"
        },
        "value": {
          "$ref": "#/definitions/AssignmentPattern"
        },
        "decorators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Decorator"
          }
        }
      },
      "required": [
        "type",
        "argument"
      ]
    },
    "ReturnStatement": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ReturnStatement"
          ]
        },
        "argument": {
          "oneOf": [
            {
              "$ref": "#/definitions/Expression"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "type",
        "argument"
      ]
    },
    "SequenceExpression": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SequenceExpression"
          ]
        },
        "expressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Expression"
          }
        }
      },
      "required": [
        "type",
        "expressions"
      ]
    },
    "SpreadElement": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SpreadElement"
          ]
        },
        "argument": {
          "$ref": "#/definitions/Expression"
        }
      },
      "required": [
        "type",
        "argument"
      ]
    },
    "Statement": {
      "oneOf": [
        {
          "$ref": "#/definitions/BlockStatement"
        },
        {
          "$ref": "#/definitions/BreakStatement"
        },
        {
          "$ref": "#/definitions/ClassDeclarationWithName"
        },
        {
          "$ref": "#/definitions/ContinueStatement"
        },
        {
          "$ref": "#/definitions/DebuggerStatement"
        },
        {
          "$ref": "#/definitions/DoWhileStatement"
        },
        {
          "$ref": "#/definitions/ExportAllDeclaration"
        },
        {
          "$ref": "#/definitions/ExportDefaultDeclaration"
        },
        {
          "$ref": "#/definitions/ExportNamedDeclaration"
        },
        {
          "$ref": "#/definitions/ExpressionStatement"
        },
        {
          "$ref": "#/definitions/ForInStatement"
        },
        {
          "$ref": "#/definitions/ForOfStatement"
        },
        {
          "$ref": "#/definitions/ForStatement"
        },
        {
          "$ref": "#/definitions/FunctionDeclarationWithName"
        },
        {
          "$ref": "#/definitions/IfStatement"
        },
        {
          "$ref": "#/definitions/ImportDeclaration"
        },
        {
          "$ref": "#/definitions/LabeledStatement"
        },
        {
          "$ref": "#/definitions/ReturnStatement"
        },
        {
          "$ref": "#/definitions/SwitchStatement"
        },
        {
          "$ref": "#/definitions/ThrowStatement"
        },
        {
          "$ref": "#/definitions/TryStatement"
        },
        {
          "$ref": "#/definitions/TSDeclareFunction"
        },
        {
          "$ref": "#/definitions/TSEnumDeclaration"
        },
        {
          "$ref": "#/definitions/TSExportAssignment"
        },
        {
          "$ref": "#/definitions/TSImportEqualsDeclaration"
        },
        {
          "$ref": "#/definitions/TSInterfaceDeclaration"
        },
        {
          "$ref": "#/definitions/TSModuleDeclaration"
        },
        {
          "$ref": "#/definitions/TSNamespaceExportDeclaration"
        },
        {
          "$ref": "#/definitions/TSTypeAliasDeclaration"
        },
        {
          "$ref": "#/definitions/VariableDeclaration"
        },
        {
          "$ref": "#/definitions/WhileStatement"
        },
        {
          "$ref": "#/definitions/WithStatement"
        }
      ]
    },
    "StaticBlock": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "StaticBlock"
          ]
        },
        "body": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Statement"
          }
        }
      },
      "required": [
        "type",
        "body"
      ]
    },
    "StringLiteral": {
      "allOf": [
        {
          "$ref": "#/definitions/LiteralBase"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "type": "string"
            }
          },
          "required": [
            "value"
          ]
        }
      ]
    },
    "StringToken": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "String"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "Super": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Super"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "SwitchCase": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SwitchCase"
          ]
        },
        "test": {
          "oneOf": [
            {
              "$ref": "#/definitions/Expression"
            },
            {
              "type": "null"
            }
          ]
        },
        "consequent": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Statement"
          }
        }
      },
      "required": [
        "type",
        "test",
        "consequent"
      ]
    },
    "SwitchStatement": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SwitchStatement"
          ]
        },
        "discriminant": {
          "$ref": "#/definitions/Expression"
        },
        "cases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SwitchCase"
          }
        }
      },
      "required": [
        "type",
        "discriminant",
        "cases"
      ]
    },
    "TaggedTemplateExpression": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TaggedTemplateExpression"
          ]
        },
        "typeParameters": {
          "$ref": "#/definitions/TSTypeParameterInstantiation"
        },
        "tag": {
          "$ref": "#/definitions/LeftHandSideExpression"
        },
        "quasi": {
          "$ref": "#/definitions/TemplateLiteral"
        }
      },
      "required": [
        "type",
        "tag",
        "quasi"
      ]
    },
    "TemplateElement": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TemplateElement"
          ]
        },
        "value": {
          "type": "object",
          "properties": {
            "raw": {
              "type": "string"
            },
            "cooked": {
              "type": "string"
            }
          },
          "required": [
            "raw",
            "cooked"
          ]
        },
        "tail": {
          "type": "boolean"
        }
      },
      "required": [
        "type",
        "value",
        "tail"
      ]
    },
    "TemplateLiteral": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TemplateLiteral"
          ]
        },
        "quasis": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateElement"
          }
        },
        "expressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Expression"
          }
        }
      },
      "required": [
        "type",
        "quasis",
        "expressions"
      ]
    },
    "TemplateToken": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Template"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "ThisExpression": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ThisExpression"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "ThrowStatement": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ThrowStatement"
          ]
        },
        "argument": {
          "oneOf": [
            {
              "$ref": "#/definitions/Statement"
            },
            {
              "$ref": "#/definitions/TSAsExpression"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "type",
        "argument"
      ]
    },
    "Token": {
      "oneOf": [
        {
          "$ref": "#/definitions/BooleanToken"
        },
        {
          "$ref": "#/definitions/Comment"
        },
        {
          "$ref": "#/definitions/IdentifierToken"
        },
        {
          "$ref": "#/definitions/JSXIdentifierToken"
        },
        {
          "$ref": "#/definitions/JSXTextToken"
        },
        {
          "$ref": "#/definitions/KeywordToken"
        },
        {
          "$ref": "#/definitions/NullToken"
        },
        {
          "$ref": "#/definitions/NumericToken"
        },
        {
          "$ref": "#/definitions/PunctuatorToken"
        },
        {
          "$ref": "#/definitions/RegularExpressionToken"
        },
        {
          "$ref": "#/definitions/StringToken"
        },
        {
          "$ref": "#/definitions/TemplateToken"
        }
      ]
    },
    "TryStatement": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TryStatement"
          ]
        },
        "block": {
          "$ref": "#/definitions/BlockStatement"
        },
        "handler": {
          "oneOf": [
            {
              "$ref": "#/definitions/CatchClause"
            },
            {
              "type": "null"
            }
          ]
        },
        "finalizer": {
          "oneOf": [
            {
              "$ref": "#/definitions/BlockStatement"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "type",
        "block",
        "handler",
        "finalizer"
      ]
    },
    "TSAbstractKeyword": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSAbstractKeyword"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "TSAbstractMethodDefinition": {
      "oneOf": [
        {
          "$ref": "#/definitions/TSAbstractMethodDefinitionComputedName"
        },
        {
          "$ref": "#/definitions/TSAbstractMethodDefinitionNonComputedName"
        }
      ]
    },
    "TSAbstractMethodDefinitionComputedName": {
      "allOf": [
        {
          "$ref": "#/definitions/MethodDefinitionComputedNameBase"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "TSAbstractMethodDefinition"
              ]
            }
          },
          "required": [
            "type"
          ]
        }
      ]
    },
    "TSAbstractMethodDefinitionNonComputedName": {
      "allOf": [
        {
          "$ref": "#/definitions/MethodDefinitionNonComputedNameBase"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "TSAbstractMethodDefinition"
              ]
            }
          },
          "required": [
            "type"
          ]
        }
      ]
    },
    "TSAbstractPropertyDefinition": {
      "oneOf": [
        {
          "$ref": "#/definitions/TSAbstractPropertyDefinitionComputedName"
        },
        {
          "$ref": "#/definitions/TSAbstractPropertyDefinitionNonComputedName"
        }
      ]
    },
    "TSAbstractPropertyDefinitionComputedName": {
      "allOf": [
        {
          "$ref": "#/definitions/PropertyDefinitionComputedNameBase"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "TSAbstractPropertyDefinition"
              ]
            },
            "value": {
              "type": "null"
            }
          },
          "required": [
            "type",
            "value"
          ]
        }
      ]
    },
    "TSAbstractPropertyDefinitionNonComputedName": {
      "allOf": [
        {
          "$ref": "#/definitions/PropertyDefinitionNonComputedNameBase"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "TSAbstractPropertyDefinition"
              ]
            },
            "value": {
              "type": "null"
            }
          },
          "required": [
            "type",
            "value"
          ]
        }
      ]
    },
    "TSAnyKeyword": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSAnyKeyword"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "TSArrayType": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSArrayType"
          ]
        },
        "elementType": {
          "$ref": "#/definitions/TypeNode"
        }
      },
      "required": [
        "type",
        "elementType"
      ]
    },
    "TSAsExpression": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSAsExpression"
          ]
        },
        "expression": {
          "$ref": "#/definitions/Expression"
        },
        "typeAnnotation": {
          "$ref": "#/definitions/TypeNode"
        }
      },
      "required": [
        "type",
        "expression",
        "typeAnnotation"
      ]
    },
    "TSAsyncKeyword": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSAsyncKeyword"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "TSBigIntKeyword": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSBigIntKeyword"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "TSBooleanKeyword": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSBooleanKeyword"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "TSCallSignatureDeclaration": {
      "allOf": [
        {
          "$ref": "#/definitions/TSFunctionSignatureBase"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "TSCallSignatureDeclaration"
              ]
            }
          },
          "required": [
            "type"
          ]
        }
      ]
    },
    "TSClassImplements": {
      "allOf": [
        {
          "$ref": "#/definitions/TSHeritageBase"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "TSClassImplements"
              ]
            }
          },
          "required": [
            "type"
          ]
        }
      ]
    },
    "TSConditionalType": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSConditionalType"
          ]
        },
        "checkType": {
          "$ref": "#/definitions/TypeNode"
        },
        "extendsType": {
          "$ref": "#/definitions/TypeNode"
        },
        "trueType": {
          "$ref": "#/definitions/TypeNode"
        },
        "falseType": {
          "$ref": "#/definitions/TypeNode"
        }
      },
      "required": [
        "type",
        "checkType",
        "extendsType",
        "trueType",
        "falseType"
      ]
    },
    "TSConstructorType": {
      "allOf": [
        {
          "$ref": "#/definitions/TSFunctionSignatureBase"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "TSConstructorType"
              ]
            },
            "abstract": {
              "type": "boolean"
            }
          },
          "required": [
            "type",
            "abstract"
          ]
        }
      ]
    },
    "TSConstructSignatureDeclaration": {
      "allOf": [
        {
          "$ref": "#/definitions/TSFunctionSignatureBase"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "TSConstructSignatureDeclaration"
              ]
            }
          },
          "required": [
            "type"
          ]
        }
      ]
    },
    "TSDeclareFunction": {
      "allOf": [
        {
          "$ref": "#/definitions/FunctionBase"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "TSDeclareFunction"
              ]
            },
            "body": {
              "$ref": "#/definitions/BlockStatement"
            },
            "declare": {
              "type": "boolean"
            },
            "expression": {
              "type": "boolean",
              "enum": [
                false
              ]
            }
          },
          "required": [
            "type",
            "expression"
          ]
        }
      ]
    },
    "TSDeclareKeyword": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSDeclareKeyword"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "TSEmptyBodyFunctionExpression": {
      "allOf": [
        {
          "$ref": "#/definitions/FunctionBase"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "TSEmptyBodyFunctionExpression"
              ]
            },
            "body": {
              "type": "null"
            },
            "id": {
              "type": "null"
            }
          },
          "required": [
            "type",
            "body",
            "id"
          ]
        }
      ]
    },
    "TSEnumDeclaration": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSEnumDeclaration"
          ]
        },
        "const": {
          "type": "boolean"
        },
        "declare": {
          "type": "boolean"
        },
        "id": {
          "$ref": "#/definitions/Identifier"
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TSEnumMember"
          }
        },
        "modifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Modifier"
          }
        }
      },
      "required": [
        "type",
        "id",
        "members"
      ]
    },
    "TSEnumMember": {
      "oneOf": [
        {
          "$ref": "#/definitions/TSEnumMemberComputedName"
        },
        {
          "$ref": "#/definitions/TSEnumMemberNonComputedName"
        }
      ]
    },
    "TSEnumMemberBase": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSEnumMember"
          ]
        },
        "id": {
          "oneOf": [
            {
              "$ref": "#/definitions/PropertyNameComputed"
            },
            {
              "$ref": "#/definitions/PropertyNameNonComputed"
            }
          ]
        },
        "initializer": {
          "$ref": "#/definitions/Expression"
        },
        "computed": {
          "type": "boolean"
        }
      },
      "required": [
        "type",
        "id"
      ]
    },
    "TSEnumMemberComputedName": {
      "allOf": [
        {
          "$ref": "#/definitions/TSEnumMemberBase"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "$ref": "#/definitions/PropertyNameComputed"
            },
            "computed": {
              "type": "boolean",
              "enum": [
                true
              ]
            }
          },
          "required": [
            "id",
            "computed"
          ]
        }
      ]
    },
    "TSEnumMemberNonComputedName": {
      "allOf": [
        {
          "$ref": "#/definitions/TSEnumMemberBase"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "$ref": "#/definitions/PropertyNameNonComputed"
            },
            "computed": {
              "type": "boolean",
              "enum": [
                false
              ]
            }
          },
          "required": [
            "id"
          ]
        }
      ]
    },
    "TSExportAssignment": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSExportAssignment"
          ]
        },
        "expression": {
          "$ref": "#/definitions/Expression"
        }
      },
      "required": [
        "type",
        "expression"
      ]
    },
    "TSExportKeyword": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSExportKeyword"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "TSExternalModuleReference": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSExternalModuleReference"
          ]
        },
        "expression": {
          "$ref": "#/definitions/Expression"
        }
      },
      "required": [
        "type",
        "expression"
      ]
    },
    "TSFunctionSignatureBase": {
      "type": "object",
      "properties": {
        "params": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Parameter"
          }
        },
        "returnType": {
          "$ref": "#/definitions/TSTypeAnnotation"
        },
        "typeParameters": {
          "$ref": "#/definitions/TSTypeParameterDeclaration"
        }
      },
      "required": [
        "params"
      ]
    },
    "TSFunctionType": {
      "allOf": [
        {
          "$ref": "#/definitions/TSFunctionSignatureBase"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "TSFunctionType"
              ]
            }
          },
          "required": [
            "type"
          ]
        }
      ]
    },
    "TSHeritageBase": {
      "type": "object",
      "properties": {
        "expression": {
          "$ref": "#/definitions/Expression"
        },
        "typeParameters": {
          "$ref": "#/definitions/TSTypeParameterInstantiation"
        }
      },
      "required": [
        "expression"
      ]
    },
    "TSImportEqualsDeclaration": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSImportEqualsDeclaration"
          ]
        },
        "id": {
          "$ref": "#/definitions/Identifier"
        },
        "moduleReference": {
          "oneOf": [
            {
              "$ref": "#/definitions/EntityName"
            },
            {
              "$ref": "#/definitions/TSExternalModuleReference"
            }
          ]
        },
        "importKind": {
          "$ref": "#/definitions/ImportKind"
        },
        "isExport": {
          "type": "boolean"
        }
      },
      "required": [
        "type",
        "id",
        "moduleReference",
        "importKind",
        "isExport"
      ]
    },
    "TSImportType": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSImportType"
          ]
        },
        "isTypeOf": {
          "type": "boolean"
        },
        "parameter": {
          "$ref": "#/definitions/TypeNode"
        },
        "qualifier": {
          "oneOf": [
            {
              "$ref": "#/definitions/EntityName"
            },
            {
              "type": "null"
            }
          ]
        },
        "typeParameters": {
          "oneOf": [
            {
              "$ref": "#/definitions/TSTypeParameterInstantiation"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "type",
        "isTypeOf",
        "parameter",
        "qualifier",
        "typeParameters"
      ]
    },
    "TSIndexedAccessType": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSIndexedAccessType"
          ]
        },
        "objectType": {
          "$ref": "#/definitions/TypeNode"
        },
        "indexType": {
          "$ref": "#/definitions/TypeNode"
        }
      },
      "required": [
        "type",
        "objectType",
        "indexType"
      ]
    },
    "TSIndexSignature": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSIndexSignature"
          ]
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Parameter"
          }
        },
        "typeAnnotation": {
          "$ref": "#/definitions/TSTypeAnnotation"
        },
        "readonly": {
          "type": "boolean"
        },
        "accessibility": {
          "$ref": "#/definitions/Accessibility"
        },
        "export": {
          "type": "boolean"
        },
        "static": {
          "type": "boolean"
        }
      },
      "required": [
        "type",
        "parameters"
      ]
    },
    "TSInferType": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSInferType"
          ]
        },
        "typeParameter": {
          "$ref": "#/definitions/TSTypeParameter"
        }
      },
      "required": [
        "type",
        "typeParameter"
      ]
    },
    "TSInstantiationExpression": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSInstantiationExpression"
          ]
        },
        "expression": {
          "$ref": "#/definitions/Expression"
        },
        "typeParameters": {
          "$ref": "#/definitions/TSTypeParameterInstantiation"
        }
      },
      "required": [
        "type",
        "expression",
        "typeParameters"
      ]
    },
    "TSInterfaceBody": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSInterfaceBody"
          ]
        },
        "body": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TypeElement"
          }
        }
      },
      "required": [
        "type",
        "body"
      ]
    },
    "TSInterfaceDeclaration": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSInterfaceDeclaration"
          ]
        },
        "abstract": {
          "type": "boolean"
        },
        "body": {
          "$ref": "#/definitions/TSInterfaceBody"
        },
        "declare": {
          "type": "boolean"
        },
        "extends": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TSInterfaceHeritage"
          }
        },
        "id": {
          "$ref": "#/definitions/Identifier"
        },
        "implements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TSInterfaceHeritage"
          }
        },
        "typeParameters": {
          "$ref": "#/definitions/TSTypeParameterDeclaration"
        }
      },
      "required": [
        "type",
        "body",
        "id"
      ]
    },
    "TSInterfaceHeritage": {
      "allOf": [
        {
          "$ref": "#/definitions/TSHeritageBase"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "TSInterfaceHeritage"
              ]
            }
          },
          "required": [
            "type"
          ]
        }
      ]
    },
    "TSIntersectionType": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSIntersectionType"
          ]
        },
        "types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TypeNode"
          }
        }
      },
      "required": [
        "type",
        "types"
      ]
    },
    "TSIntrinsicKeyword": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSIntrinsicKeyword"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "TSLiteralType": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSLiteralType"
          ]
        },
        "literal": {
          "oneOf": [
            {
              "$ref": "#/definitions/LiteralExpression"
            },
            {
              "$ref": "#/definitions/UnaryExpression"
            },
            {
              "$ref": "#/definitions/UpdateExpression"
            }
          ]
        }
      },
      "required": [
        "type",
        "literal"
      ]
    },
    "TSMappedType": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSMappedType"
          ]
        },
        "typeParameter": {
          "$ref": "#/definitions/TSTypeParameter"
        },
        "readonly": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "enum": [
                "-"
              ]
            },
            {
              "type": "string",
              "enum": [
                "+"
              ]
            }
          ]
        },
        "optional": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "enum": [
                "-"
              ]
            },
            {
              "type": "string",
              "enum": [
                "+"
              ]
            }
          ]
        },
        "typeAnnotation": {
          "$ref": "#/definitions/TypeNode"
        },
        "nameType": {
          "oneOf": [
            {
              "$ref": "#/definitions/TypeNode"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "type",
        "typeParameter",
        "nameType"
      ]
    },
    "TSMethodSignature": {
      "oneOf": [
        {
          "$ref": "#/definitions/TSMethodSignatureComputedName"
        },
        {
          "$ref": "#/definitions/TSMethodSignatureNonComputedName"
        }
      ]
    },
    "TSMethodSignatureBase": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSMethodSignature"
          ]
        },
        "key": {
          "$ref": "#/definitions/PropertyName"
        },
        "computed": {
          "type": "boolean"
        },
        "params": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Parameter"
          }
        },
        "optional": {
          "type": "boolean"
        },
        "returnType": {
          "$ref": "#/definitions/TSTypeAnnotation"
        },
        "readonly": {
          "type": "boolean"
        },
        "typeParameters": {
          "$ref": "#/definitions/TSTypeParameterDeclaration"
        },
        "accessibility": {
          "$ref": "#/definitions/Accessibility"
        },
        "export": {
          "type": "boolean"
        },
        "static": {
          "type": "boolean"
        },
        "kind": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "get"
              ]
            },
            {
              "type": "string",
              "enum": [
                "method"
              ]
            },
            {
              "type": "string",
              "enum": [
                "set"
              ]
            }
          ]
        }
      },
      "required": [
        "type",
        "key",
        "computed",
        "params",
        "kind"
      ]
    },
    "TSMethodSignatureComputedName": {
      "allOf": [
        {
          "$ref": "#/definitions/TSMethodSignatureBase"
        },
        {
          "type": "object",
          "properties": {
            "key": {
              "$ref": "#/definitions/PropertyNameComputed"
            },
            "computed": {
              "type": "boolean",
              "enum": [
                true
              ]
            }
          },
          "required": [
            "key",
            "computed"
          ]
        }
      ]
    },
    "TSMethodSignatureNonComputedName": {
      "allOf": [
        {
          "$ref": "#/definitions/TSMethodSignatureBase"
        },
        {
          "type": "object",
          "properties": {
            "key": {
              "$ref": "#/definitions/PropertyNameNonComputed"
            },
            "computed": {
              "type": "boolean",
              "enum": [
                false
              ]
            }
          },
          "required": [
            "key",
            "computed"
          ]
        }
      ]
    },
    "TSModuleBlock": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSModuleBlock"
          ]
        },
        "body": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProgramStatement"
          }
        }
      },
      "required": [
        "type",
        "body"
      ]
    },
    "TSModuleDeclaration": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSModuleDeclaration"
          ]
        },
        "id": {
          "oneOf": [
            {
              "$ref": "#/definitions/Identifier"
            },
            {
              "$ref": "#/definitions/Literal"
            }
          ]
        },
        "body": {
          "oneOf": [
            {
              "$ref": "#/definitions/TSModuleBlock"
            },
            {
              "$ref": "#/definitions/TSModuleDeclaration"
            }
          ]
        },
        "global": {
          "type": "boolean"
        },
        "declare": {
          "type": "boolean"
        },
        "modifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Modifier"
          }
        }
      },
      "required": [
        "type",
        "id"
      ]
    },
    "TSNamedTupleMember": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSNamedTupleMember"
          ]
        },
        "elementType": {
          "$ref": "#/definitions/TypeNode"
        },
        "label": {
          "$ref": "#/definitions/Identifier"
        },
        "optional": {
          "type": "boolean"
        }
      },
      "required": [
        "type",
        "elementType",
        "label",
        "optional"
      ]
    },
    "TSNamespaceExportDeclaration": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSNamespaceExportDeclaration"
          ]
        },
        "id": {
          "$ref": "#/definitions/Identifier"
        }
      },
      "required": [
        "type",
        "id"
      ]
    },
    "TSNeverKeyword": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSNeverKeyword"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "TSNonNullExpression": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSNonNullExpression"
          ]
        },
        "expression": {
          "$ref": "#/definitions/Expression"
        }
      },
      "required": [
        "type",
        "expression"
      ]
    },
    "TSNullKeyword": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSNullKeyword"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "TSNumberKeyword": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSNumberKeyword"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "TSObjectKeyword": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSObjectKeyword"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "TSOptionalType": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSOptionalType"
          ]
        },
        "typeAnnotation": {
          "$ref": "#/definitions/TypeNode"
        }
      },
      "required": [
        "type",
        "typeAnnotation"
      ]
    },
    "TSParameterProperty": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSParameterProperty"
          ]
        },
        "accessibility": {
          "$ref": "#/definitions/Accessibility"
        },
        "readonly": {
          "type": "boolean"
        },
        "static": {
          "type": "boolean"
        },
        "export": {
          "type": "boolean"
        },
        "override": {
          "type": "boolean"
        },
        "parameter": {
          "oneOf": [
            {
              "$ref": "#/definitions/AssignmentPattern"
            },
            {
              "$ref": "#/definitions/BindingName"
            },
            {
              "$ref": "#/definitions/RestElement"
            }
          ]
        },
        "decorators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Decorator"
          }
        }
      },
      "required": [
        "type",
        "parameter"
      ]
    },
    "TSPrivateKeyword": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSPrivateKeyword"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "TSPropertySignature": {
      "oneOf": [
        {
          "$ref": "#/definitions/TSPropertySignatureComputedName"
        },
        {
          "$ref": "#/definitions/TSPropertySignatureNonComputedName"
        }
      ]
    },
    "TSPropertySignatureBase": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSPropertySignature"
          ]
        },
        "key": {
          "$ref": "#/definitions/PropertyName"
        },
        "optional": {
          "type": "boolean"
        },
        "computed": {
          "type": "boolean"
        },
        "typeAnnotation": {
          "$ref": "#/definitions/TSTypeAnnotation"
        },
        "initializer": {
          "$ref": "#/definitions/Expression"
        },
        "readonly": {
          "type": "boolean"
        },
        "static": {
          "type": "boolean"
        },
        "export": {
          "type": "boolean"
        },
        "accessibility": {
          "$ref": "#/definitions/Accessibility"
        }
      },
      "required": [
        "type",
        "key",
        "computed"
      ]
    },
    "TSPropertySignatureComputedName": {
      "allOf": [
        {
          "$ref": "#/definitions/TSPropertySignatureBase"
        },
        {
          "type": "object",
          "properties": {
            "key": {
              "$ref": "#/definitions/PropertyNameComputed"
            },
            "computed": {
              "type": "boolean",
              "enum": [
                true
              ]
            }
          },
          "required": [
            "key",
            "computed"
          ]
        }
      ]
    },
    "TSPropertySignatureNonComputedName": {
      "allOf": [
        {
          "$ref": "#/definitions/TSPropertySignatureBase"
        },
        {
          "type": "object",
          "properties": {
            "key": {
              "$ref": "#/definitions/PropertyNameNonComputed"
            },
            "computed": {
              "type": "boolean",
              "enum": [
                false
              ]
            }
          },
          "required": [
            "key",
            "computed"
          ]
        }
      ]
    },
    "TSProtectedKeyword": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSProtectedKeyword"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "TSPublicKeyword": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSPublicKeyword"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "TSQualifiedName": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSQualifiedName"
          ]
        },
        "left": {
          "$ref": "#/definitions/EntityName"
        },
        "right": {
          "$ref": "#/definitions/Identifier"
        }
      },
      "required": [
        "type",
        "left",
        "right"
      ]
    },
    "TSReadonlyKeyword": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSReadonlyKeyword"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "TSRestType": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSRestType"
          ]
        },
        "typeAnnotation": {
          "$ref": "#/definitions/TypeNode"
        }
      },
      "required": [
        "type",
        "typeAnnotation"
      ]
    },
    "TSStaticKeyword": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSStaticKeyword"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "TSStringKeyword": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSStringKeyword"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "TSSymbolKeyword": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSSymbolKeyword"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "TSTemplateLiteralType": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSTemplateLiteralType"
          ]
        },
        "quasis": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateElement"
          }
        },
        "types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TypeNode"
          }
        }
      },
      "required": [
        "type",
        "quasis",
        "types"
      ]
    },
    "TSThisType": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSThisType"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "TSTupleType": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSTupleType"
          ]
        },
        "elementTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TypeNode"
          }
        }
      },
      "required": [
        "type",
        "elementTypes"
      ]
    },
    "TSTypeAliasDeclaration": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSTypeAliasDeclaration"
          ]
        },
        "declare": {
          "type": "boolean"
        },
        "id": {
          "$ref": "#/definitions/Identifier"
        },
        "typeAnnotation": {
          "$ref": "#/definitions/TypeNode"
        },
        "typeParameters": {
          "$ref": "#/definitions/TSTypeParameterDeclaration"
        }
      },
      "required": [
        "type",
        "id",
        "typeAnnotation"
      ]
    },
    "TSTypeAnnotation": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSTypeAnnotation"
          ]
        },
        "typeAnnotation": {
          "$ref": "#/definitions/TypeNode"
        }
      },
      "required": [
        "type",
        "typeAnnotation"
      ]
    },
    "TSTypeAssertion": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSTypeAssertion"
          ]
        },
        "typeAnnotation": {
          "$ref": "#/definitions/TypeNode"
        },
        "expression": {
          "$ref": "#/definitions/Expression"
        }
      },
      "required": [
        "type",
        "typeAnnotation",
        "expression"
      ]
    },
    "TSTypeLiteral": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSTypeLiteral"
          ]
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TypeElement"
          }
        }
      },
      "required": [
        "type",
        "members"
      ]
    },
    "TSTypeOperator": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSTypeOperator"
          ]
        },
        "operator": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "keyof"
              ]
            },
            {
              "type": "string",
              "enum": [
                "readonly"
              ]
            },
            {
              "type": "string",
              "enum": [
                "unique"
              ]
            }
          ]
        },
        "typeAnnotation": {
          "$ref": "#/definitions/TypeNode"
        }
      },
      "required": [
        "type",
        "operator"
      ]
    },
    "TSTypeParameter": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSTypeParameter"
          ]
        },
        "name": {
          "$ref": "#/definitions/Identifier"
        },
        "constraint": {
          "$ref": "#/definitions/TypeNode"
        },
        "default": {
          "$ref": "#/definitions/TypeNode"
        },
        "in": {
          "type": "boolean"
        },
        "out": {
          "type": "boolean"
        }
      },
      "required": [
        "type",
        "name",
        "in",
        "out"
      ]
    },
    "TSTypeParameterDeclaration": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSTypeParameterDeclaration"
          ]
        },
        "params": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TSTypeParameter"
          }
        }
      },
      "required": [
        "type",
        "params"
      ]
    },
    "TSTypeParameterInstantiation": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSTypeParameterInstantiation"
          ]
        },
        "params": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TypeNode"
          }
        }
      },
      "required": [
        "type",
        "params"
      ]
    },
    "TSTypePredicate": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSTypePredicate"
          ]
        },
        "asserts": {
          "type": "boolean"
        },
        "parameterName": {
          "oneOf": [
            {
              "$ref": "#/definitions/Identifier"
            },
            {
              "$ref": "#/definitions/TSThisType"
            }
          ]
        },
        "typeAnnotation": {
          "oneOf": [
            {
              "$ref": "#/definitions/TSTypeAnnotation"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "type",
        "asserts",
        "parameterName",
        "typeAnnotation"
      ]
    },
    "TSTypeQuery": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSTypeQuery"
          ]
        },
        "exprName": {
          "$ref": "#/definitions/EntityName"
        },
        "typeParameters": {
          "$ref": "#/definitions/TSTypeParameterInstantiation"
        }
      },
      "required": [
        "type",
        "exprName"
      ]
    },
    "TSTypeReference": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSTypeReference"
          ]
        },
        "typeName": {
          "$ref": "#/definitions/EntityName"
        },
        "typeParameters": {
          "$ref": "#/definitions/TSTypeParameterInstantiation"
        }
      },
      "required": [
        "type",
        "typeName"
      ]
    },
    "TSUndefinedKeyword": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSUndefinedKeyword"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "TSUnionType": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSUnionType"
          ]
        },
        "types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TypeNode"
          }
        }
      },
      "required": [
        "type",
        "types"
      ]
    },
    "TSUnknownKeyword": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSUnknownKeyword"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "TSVoidKeyword": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSVoidKeyword"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "TypeElement": {
      "oneOf": [
        {
          "$ref": "#/definitions/TSCallSignatureDeclaration"
        },
        {
          "$ref": "#/definitions/TSConstructSignatureDeclaration"
        },
        {
          "$ref": "#/definitions/TSIndexSignature"
        },
        {
          "$ref": "#/definitions/TSMethodSignature"
        },
        {
          "$ref": "#/definitions/TSPropertySignature"
        }
      ]
    },
    "TypeNode": {
      "oneOf": [
        {
          "$ref": "#/definitions/TSAbstractKeyword"
        },
        {
          "$ref": "#/definitions/TSAnyKeyword"
        },
        {
          "$ref": "#/definitions/TSArrayType"
        },
        {
          "$ref": "#/definitions/TSAsyncKeyword"
        },
        {
          "$ref": "#/definitions/TSBigIntKeyword"
        },
        {
          "$ref": "#/definitions/TSBooleanKeyword"
        },
        {
          "$ref": "#/definitions/TSConditionalType"
        },
        {
          "$ref": "#/definitions/TSConstructorType"
        },
        {
          "$ref": "#/definitions/TSDeclareKeyword"
        },
        {
          "$ref": "#/definitions/TSExportKeyword"
        },
        {
          "$ref": "#/definitions/TSFunctionType"
        },
        {
          "$ref": "#/definitions/TSImportType"
        },
        {
          "$ref": "#/definitions/TSIndexedAccessType"
        },
        {
          "$ref": "#/definitions/TSInferType"
        },
        {
          "$ref": "#/definitions/TSIntersectionType"
        },
        {
          "$ref": "#/definitions/TSIntrinsicKeyword"
        },
        {
          "$ref": "#/definitions/TSLiteralType"
        },
        {
          "$ref": "#/definitions/TSMappedType"
        },
        {
          "$ref": "#/definitions/TSNamedTupleMember"
        },
        {
          "$ref": "#/definitions/TSNeverKeyword"
        },
        {
          "$ref": "#/definitions/TSNullKeyword"
        },
        {
          "$ref": "#/definitions/TSNumberKeyword"
        },
        {
          "$ref": "#/definitions/TSObjectKeyword"
        },
        {
          "$ref": "#/definitions/TSOptionalType"
        },
        {
          "$ref": "#/definitions/TSPrivateKeyword"
        },
        {
          "$ref": "#/definitions/TSProtectedKeyword"
        },
        {
          "$ref": "#/definitions/TSPublicKeyword"
        },
        {
          "$ref": "#/definitions/TSReadonlyKeyword"
        },
        {
          "$ref": "#/definitions/TSRestType"
        },
        {
          "$ref": "#/definitions/TSStaticKeyword"
        },
        {
          "$ref": "#/definitions/TSStringKeyword"
        },
        {
          "$ref": "#/definitions/TSSymbolKeyword"
        },
        {
          "$ref": "#/definitions/TSTemplateLiteralType"
        },
        {
          "$ref": "#/definitions/TSThisType"
        },
        {
          "$ref": "#/definitions/TSTupleType"
        },
        {
          "$ref": "#/definitions/TSTypeLiteral"
        },
        {
          "$ref": "#/definitions/TSTypeOperator"
        },
        {
          "$ref": "#/definitions/TSTypePredicate"
        },
        {
          "$ref": "#/definitions/TSTypeQuery"
        },
        {
          "$ref": "#/definitions/TSTypeReference"
        },
        {
          "$ref": "#/definitions/TSUndefinedKeyword"
        },
        {
          "$ref": "#/definitions/TSUnionType"
        },
        {
          "$ref": "#/definitions/TSUnknownKeyword"
        },
        {
          "$ref": "#/definitions/TSVoidKeyword"
        }
      ]
    },
    "UnaryExpression": {
      "allOf": [
        {
          "$ref": "#/definitions/UnaryExpressionBase"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "UnaryExpression"
              ]
            },
            "operator": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "-"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "!"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "+"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "~"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "delete"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "typeof"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "void"
                  ]
                }
              ]
            }
          },
          "required": [
            "type",
            "operator"
          ]
        }
      ]
    },
    "UnaryExpressionBase": {
      "type": "object",
      "properties": {
        "operator": {
          "type": "string"
        },
        "prefix": {
          "type": "boolean"
        },
        "argument": {
          "oneOf": [
            {
              "$ref": "#/definitions/LeftHandSideExpression"
            },
            {
              "$ref": "#/definitions/Literal"
            },
            {
              "$ref": "#/definitions/UnaryExpression"
            }
          ]
        }
      },
      "required": [
        "operator",
        "prefix",
        "argument"
      ]
    },
    "UpdateExpression": {
      "allOf": [
        {
          "$ref": "#/definitions/UnaryExpressionBase"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "UpdateExpression"
              ]
            },
            "operator": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "--"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "++"
                  ]
                }
              ]
            }
          },
          "required": [
            "type",
            "operator"
          ]
        }
      ]
    },
    "VariableDeclaration": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "VariableDeclaration"
          ]
        },
        "declarations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VariableDeclarator"
          }
        },
        "declare": {
          "type": "boolean"
        },
        "kind": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "const"
              ]
            },
            {
              "type": "string",
              "enum": [
                "let"
              ]
            },
            {
              "type": "string",
              "enum": [
                "var"
              ]
            }
          ]
        }
      },
      "required": [
        "type",
        "declarations",
        "kind"
      ]
    },
    "VariableDeclarator": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "VariableDeclarator"
          ]
        },
        "id": {
          "$ref": "#/definitions/BindingName"
        },
        "init": {
          "oneOf": [
            {
              "$ref": "#/definitions/Expression"
            },
            {
              "type": "null"
            }
          ]
        },
        "definite": {
          "type": "boolean"
        }
      },
      "required": [
        "type",
        "id",
        "init"
      ]
    },
    "WhileStatement": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "WhileStatement"
          ]
        },
        "test": {
          "$ref": "#/definitions/Expression"
        },
        "body": {
          "$ref": "#/definitions/Statement"
        }
      },
      "required": [
        "type",
        "test",
        "body"
      ]
    },
    "WithStatement": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "WithStatement"
          ]
        },
        "object": {
          "$ref": "#/definitions/Expression"
        },
        "body": {
          "$ref": "#/definitions/Statement"
        }
      },
      "required": [
        "type",
        "object",
        "body"
      ]
    },
    "YieldExpression": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "YieldExpression"
          ]
        },
        "delegate": {
          "type": "boolean"
        },
        "argument": {
          "$ref": "#/definitions/Expression"
        }
      },
      "required": [
        "type",
        "delegate"
      ]
    }
  },
  "type": "object",
  "properties": {
    "type": {
      "type": "string",
      "enum": [
        "Program"
      ]
    },
    "body": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ProgramStatement"
      }
    },
    "sourceType": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "module"
          ]
        },
        {
          "type": "string",
          "enum": [
            "script"
          ]
        }
      ]
    },
    "comments": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Comment"
      }
    },
    "tokens": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Token"
      }
    }
  },
  "required": [
    "type",
    "body",
    "sourceType"
  ]
}